{
    "pipes": [],
    "interfaces": [
        {
            "name": "ComboBoxComponentElement",
            "id": "interface-ComboBoxComponentElement-310435609ab70146d18afb0a777d255017955e67d9acb256c1fc0ac389cb7f0f49dd64af763c88c444ee5d8dd86febfe8b679072123e35eab22a7d27a04e976d",
            "file": "projects/ncs-vaadin-components/src/lib/combo-box/combo-box.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    AfterViewInit,\r\n    Component,\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport '@vaadin/combo-box';\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-combo-box',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <vaadin-combo-box #vaadinComboBox></vaadin-combo-box>\r\n    `,\r\n    styles: ``,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ComboBoxComponent implements AfterViewInit {\r\n\r\n    @ViewChild('vaadinComboBox') vaadinComboBox!: ElementRef<ComboBoxComponentElement>;\r\n\r\n    @Input() style: string | undefined;\r\n    @Input() label: string | undefined;\r\n    @Input() value: string | undefined;\r\n    @Input() placeholder: string | undefined = '';\r\n    @Input() theme: string | undefined;\r\n    @Input() helperText: string | undefined;\r\n\r\n    @Input() itemValuePath: string | undefined;\r\n\r\n    @Input() disabled: boolean | undefined;\r\n    @Input() readonly: boolean | undefined;\r\n    @Input() items: any[] = [];\r\n    // @Input() displayNameFields: string | string[] | undefined;\r\n    @Input() displayNameRender: string | undefined;\r\n\r\n    // @Input() renderer?: (root: HTMLElement, owner: ComboBoxComponentElement, model: { item: any }) => void;\r\n    @Input() render: string | undefined;\r\n\r\n    @Input() filteredItems: any[] = [];\r\n\r\n    @Input() itemLabelPath: string | undefined = 'displayName';\r\n\r\n    private renderers?: (root: HTMLElement, owner: ComboBoxComponentElement, model: { item: any }) => void;\r\n\r\n    // @Output() filterChange = new EventEmitter<string>();\r\n    @Output() valueChange = new EventEmitter<any>();\r\n    @Output() selectedItemChange = new EventEmitter<any>();\r\n    @Output() textInput = new EventEmitter<string>();\r\n\r\n    @Input() customFilterMethod?: (items: any[], filterValue: string) => any[];\r\n\r\n    @Input() autoOpenDisabled: boolean = false;\r\n\r\n\r\n    ngAfterViewInit() {\r\n\r\n\r\n        if (this.style) {\r\n            // Applique le style d'entrée à l'élément vaadin-combo-box\r\n            this.vaadinComboBox.nativeElement.setAttribute('style', this.style);\r\n        }\r\n        this.vaadinComboBox.nativeElement.setAttribute('label', this.label as ComboBoxComponentElement['label']);\r\n        this.vaadinComboBox.nativeElement.setAttribute('value', this.value as ComboBoxComponentElement['value']);\r\n\r\n        this.vaadinComboBox.nativeElement.setAttribute('placeholder', this.placeholder as ComboBoxComponentElement['placeholder']);\r\n        this.vaadinComboBox.nativeElement.setAttribute('theme', this.theme as ComboBoxComponentElement['theme']);\r\n        this.vaadinComboBox.nativeElement.setAttribute('helper-text', this.helperText as ComboBoxComponentElement['helperText']);\r\n        this.vaadinComboBox.nativeElement.setAttribute('item-label-path', this.itemLabelPath as ComboBoxComponentElement['itemLabelPath']);\r\n        this.vaadinComboBox.nativeElement.setAttribute('item-value-path', this.itemValuePath as ComboBoxComponentElement['itemValuePath']);\r\n        // Vérifiez si l'élément natif supporte directement la propriété 'autoOpenDisabled'\r\n        if (this.vaadinComboBox.nativeElement.autoOpenDisabled !== undefined) {\r\n            this.vaadinComboBox.nativeElement.autoOpenDisabled = this.autoOpenDisabled;\r\n        } else {\r\n            // Si 'autoOpenDisabled' n'est pas supporté en tant que propriété, utilisez setAttribute pour les éléments qui traitent les attributs\r\n            // Définir ou retirer l'attribut 'auto-open-disabled' selon la valeur de 'autoOpenDisabled'\r\n            if (this.autoOpenDisabled) {\r\n                this.vaadinComboBox.nativeElement.setAttribute('auto-open-disabled', '');\r\n            } else {\r\n                this.vaadinComboBox.nativeElement.removeAttribute('auto-open-disabled');\r\n            }\r\n        }\r\n\r\n        if (this.itemLabelPath == \"displayName\") {\r\n            this.items = this.items?.map((item) => {\r\n                // if (typeof this.displayNameFields === 'string') {\r\n                //     displayName = item[this.displayNameFields];\r\n                // } else if (Array.isArray(this.displayNameFields)) {\r\n                //     displayName = this.displayNameFields.map(field => item[field]).join('      -       '); // modifier pour avoir un syteme de rendu\r\n                // }\r\n\r\n                if (!this.displayNameRender) {\r\n                    const firstKey = Object.keys(item)[0]; // Obtient le premier champ de l'objet item\r\n                    this.displayNameRender = `{{${firstKey}}}`; // Définit displayNameRender au premier champ\r\n                }\r\n\r\n                let displayName = this.displayNameRender.replace(/{{(\\w+)}}/g, (match: string, field: any) => {\r\n                    return item[field] || '';\r\n                });\r\n\r\n                return {\r\n                    ...item,\r\n                    displayName,\r\n                };\r\n            });\r\n        }\r\n\r\n\r\n        this.vaadinComboBox.nativeElement.items = this.items as ComboBoxComponentElement['items'];\r\n        this.vaadinComboBox.nativeElement.filteredItems = this.items as ComboBoxComponentElement['filteredItems'];\r\n\r\n\r\n        //comboBox.items = [{'label': 'Hydrogen', 'value': 'H'}];\r\n        // comboBox.renderer = (root: HTMLElement, owner: ComboBoxComponentElement, model: { item: any }) => {\r\n        //     //if (!root.firstChild) {\r\n        //     root.innerHTML = '';\r\n        //     root.innerHTML = `<div style=\"display: flex; align-items: center; justify-content: space-between;\">\r\n        //                 <span>${model.item.name}</span>\r\n        //                 <span style=\"color: lightslategrey\">${model.item.id}</span>\r\n        //               </div>`;\r\n        //\r\n        // }\r\n\r\n        if (this.render) {\r\n            this.renderers = this.createRenderer(this.render);\r\n            const comboBox: ComboBoxComponentElement = this.vaadinComboBox.nativeElement\r\n            comboBox.renderer = this.renderers;\r\n            comboBox.requestContentUpdate();\r\n        }\r\n\r\n        this.vaadinComboBox.nativeElement.disabled = !!this.disabled;\r\n        this.vaadinComboBox.nativeElement.readonly = !!this.readonly;\r\n\r\n        // this.vaadinComboBox.nativeElement.addEventListener('filter-changed', ((event: CustomEvent) => {\r\n        //     const filterValue = (event as any).detail.value;\r\n        //     this.filterChange.emit(filterValue);\r\n        // }) as EventListener);\r\n\r\n        this.vaadinComboBox.nativeElement.addEventListener('value-changed', (event: Event) => {\r\n            const detail = (event as CustomEvent).detail;\r\n            if (detail && 'value' in detail) {\r\n                const selectedValue = detail.value;\r\n                this.valueChange.emit(selectedValue);\r\n            }\r\n        });\r\n\r\n        this.vaadinComboBox.nativeElement.addEventListener('input', (event: Event) => {\r\n            const filterValue = (event.target as HTMLInputElement).value;\r\n            this.filterItems(filterValue);\r\n            this.textInput.emit(filterValue); // Émet la valeur saisie si nécessaire\r\n        });\r\n\r\n\r\n        this.vaadinComboBox.nativeElement.addEventListener('selected-item-changed', (($event: CustomEvent) => {\r\n            const selectedItem = $event.detail.value;\r\n            if (selectedItem) {\r\n                this.selectedItemChange.emit(selectedItem);\r\n            }\r\n        }) as EventListener);\r\n    }\r\n\r\n\r\n    private createRenderer(template: string): (root: HTMLElement, owner: any, model: { item: any }) => void {\r\n        return (root, owner, model) => {\r\n            // Expression régulière pour détecter les champs dans le template\r\n            root.innerHTML = template.replace(/{{(\\w+)}}/g, (match: string, field :any) => {\r\n                // Remplace chaque champ trouvé par sa valeur correspondante dans model.item\r\n                return model.item[field] || '';\r\n            });\r\n        };\r\n    }\r\n\r\n    private filterItems(filterValue: string) {\r\n        const filterMethod = this.customFilterMethod || this.defaultFilterMethod;\r\n        this.filteredItems = filterMethod(this.items, filterValue);\r\n        this.vaadinComboBox.nativeElement.filteredItems = this.filteredItems;\r\n    }\r\n\r\n    private defaultFilterMethod(items: any[], filterValue: string): any[] {\r\n        return items.filter(item => item.displayName.toLowerCase().includes(filterValue.toLowerCase()));\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\ninterface ComboBoxComponentElement extends HTMLElement {\r\n\r\n    label: string;\r\n    value: string;\r\n    placeholder: string;\r\n    theme: string;\r\n    helperText: string;\r\n    itemLabelPath: string;\r\n    itemValuePath: string;\r\n    disabled: boolean;\r\n    readonly: boolean;\r\n    items: any[];\r\n    renderer: (root: HTMLElement, comboBox: ComboBoxComponentElement, model: { item: any }) => void;\r\n    renderTemplate: string;\r\n    renderFields: string[];\r\n    renderStyles: string;\r\n    filteredItems: any[];\r\n    autoOpenDisabled: boolean\r\n\r\n\r\n    requestContentUpdate(): void;\r\n}\r\n\r\n\r\n/*\r\n*\r\n* :host([theme~=\"custom-spacing\"]) {\r\n  padding: 0;\r\n  min-height: 0;\r\n}\r\n\r\n* */\r\n",
            "properties": [
                {
                    "name": "autoOpenDisabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 209
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 201
                },
                {
                    "name": "filteredItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 208
                },
                {
                    "name": "helperText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 198
                },
                {
                    "name": "itemLabelPath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 199
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 203
                },
                {
                    "name": "itemValuePath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 200
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 194
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 196
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 202
                },
                {
                    "name": "renderer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 204
                },
                {
                    "name": "renderFields",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 206
                },
                {
                    "name": "renderStyles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 207
                },
                {
                    "name": "renderTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 205
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 197
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 195
                }
            ],
            "indexSignatures": [],
            "kind": 173,
            "methods": [
                {
                    "name": "requestContentUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 212,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [
                "HTMLElement"
            ]
        },
        {
            "name": "Country",
            "id": "interface-Country-5cc2ea82fdba83915652d9a052792578c72793916e86c1f120231fcb403e206449d418f7f519fc7fe5d4850a81edf57c7aadd6673e4a2b7db62a20627493e410",
            "file": "projects/ncs-vaadin-components/src/stories/_data/countries.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export const countries: Country[] = [\r\n    { \"id\": \"AF\", \"name\": \"Afghanistan\" },\r\n    { \"id\": \"AL\", \"name\": \"Albania\" },\r\n    { \"id\": \"DZ\", \"name\": \"Algeria\" },\r\n    { \"id\": \"AD\", \"name\": \"Andorra\" },\r\n    { \"id\": \"AO\", \"name\": \"Angola\" },\r\n    { \"id\": \"AG\", \"name\": \"Antigua and Barbuda\" },\r\n    { \"id\": \"AR\", \"name\": \"Argentina\" },\r\n    { \"id\": \"AM\", \"name\": \"Armenia\" },\r\n    { \"id\": \"AU\", \"name\": \"Australia\" },\r\n    { \"id\": \"AT\", \"name\": \"Austria\" },\r\n    { \"id\": \"AZ\", \"name\": \"Azerbaijan\" },\r\n    { \"id\": \"BS\", \"name\": \"Bahamas\" },\r\n    { \"id\": \"BH\", \"name\": \"Bahrain\" },\r\n    { \"id\": \"BD\", \"name\": \"Bangladesh\" },\r\n    { \"id\": \"BB\", \"name\": \"Barbados\" },\r\n    { \"id\": \"BY\", \"name\": \"Belarus\" },\r\n    { \"id\": \"BE\", \"name\": \"Belgium\" },\r\n    { \"id\": \"BZ\", \"name\": \"Belize\" },\r\n    { \"id\": \"BJ\", \"name\": \"Benin\" },\r\n    { \"id\": \"BT\", \"name\": \"Bhutan\" },\r\n    { \"id\": \"BO\", \"name\": \"Bolivia\" },\r\n    { \"id\": \"BA\", \"name\": \"Bosnia and Herzegovina\" },\r\n    { \"id\": \"BW\", \"name\": \"Botswana\" },\r\n    { \"id\": \"BR\", \"name\": \"Brazil\" },\r\n    { \"id\": \"BN\", \"name\": \"Brunei\" },\r\n    { \"id\": \"BG\", \"name\": \"Bulgaria\" },\r\n    { \"id\": \"BF\", \"name\": \"Burkina Faso\" },\r\n    { \"id\": \"BI\", \"name\": \"Burundi\" },\r\n    { \"id\": \"KH\", \"name\": \"Cambodia\" },\r\n    { \"id\": \"CM\", \"name\": \"Cameroon\" },\r\n    { \"id\": \"CA\", \"name\": \"Canada\" },\r\n    { \"id\": \"CV\", \"name\": \"Cape Verde\" },\r\n    { \"id\": \"CF\", \"name\": \"Central African Republic\" },\r\n    { \"id\": \"TD\", \"name\": \"Chad\" },\r\n    { \"id\": \"CL\", \"name\": \"Chile\" },\r\n    { \"id\": \"CN\", \"name\": \"China\" },\r\n    { \"id\": \"CO\", \"name\": \"Colombia\" },\r\n    { \"id\": \"KM\", \"name\": \"Comoros\" },\r\n    { \"id\": \"CG\", \"name\": \"Congo (Brazzaville)\" },\r\n    { \"id\": \"CD\", \"name\": \"Congo (Kinshasa)\" },\r\n    { \"id\": \"CR\", \"name\": \"Costa Rica\" },\r\n    { \"id\": \"HR\", \"name\": \"Croatia\" },\r\n    { \"id\": \"CU\", \"name\": \"Cuba\" },\r\n    { \"id\": \"CY\", \"name\": \"Cyprus\" },\r\n    { \"id\": \"CZ\", \"name\": \"Czech Republic\" },\r\n    { \"id\": \"DK\", \"name\": \"Denmark\" },\r\n    { \"id\": \"DJ\", \"name\": \"Djibouti\" },\r\n    { \"id\": \"DM\", \"name\": \"Dominica\" },\r\n    { \"id\": \"DO\", \"name\": \"Dominican Republic\" },\r\n    { \"id\": \"EC\", \"name\": \"Ecuador\" },\r\n    { \"id\": \"EG\", \"name\": \"Egypt\" },\r\n    { \"id\": \"SV\", \"name\": \"El Salvador\" },\r\n    { \"id\": \"GQ\", \"name\": \"Equatorial Guinea\" },\r\n    { \"id\": \"ER\", \"name\": \"Eritrea\" },\r\n    { \"id\": \"EE\", \"name\": \"Estonia\" },\r\n    { \"id\": \"ET\", \"name\": \"Ethiopia\" },\r\n    { \"id\": \"FJ\", \"name\": \"Fiji\" },\r\n    { \"id\": \"FI\", \"name\": \"Finland\" },\r\n    { \"id\": \"FR\", \"name\": \"France\" },\r\n    { \"id\": \"GA\", \"name\": \"Gabon\" },\r\n    { \"id\": \"GM\", \"name\": \"Gambia\" },\r\n    { \"id\": \"GE\", \"name\": \"Georgia\" },\r\n    { \"id\": \"DE\", \"name\": \"Germany\" },\r\n    { \"id\": \"GH\", \"name\": \"Ghana\" },\r\n    { \"id\": \"GR\", \"name\": \"Greece\" },\r\n    { \"id\": \"GD\", \"name\": \"Grenada\" },\r\n    { \"id\": \"GT\", \"name\": \"Guatemala\" },\r\n    { \"id\": \"GN\", \"name\": \"Guinea\" },\r\n    { \"id\": \"GW\", \"name\": \"Guinea-Bissau\" },\r\n    { \"id\": \"GY\", \"name\": \"Guyana\" },\r\n    { \"id\": \"HT\", \"name\": \"Haiti\" },\r\n    { \"id\": \"HN\", \"name\": \"Honduras\" },\r\n    { \"id\": \"HU\", \"name\": \"Hungary\" },\r\n    { \"id\": \"IS\", \"name\": \"Iceland\" },\r\n    { \"id\": \"IN\", \"name\": \"India\" },\r\n    { \"id\": \"ID\", \"name\": \"Indonesia\" },\r\n    { \"id\": \"IR\", \"name\": \"Iran\" },\r\n    { \"id\": \"IQ\", \"name\": \"Iraq\" },\r\n    { \"id\": \"IE\", \"name\": \"Ireland\" },\r\n    { \"id\": \"IL\", \"name\": \"Israel\" },\r\n    { \"id\": \"IT\", \"name\": \"Italy\" },\r\n    { \"id\": \"CI\", \"name\": \"Ivory Coast\" },\r\n    { \"id\": \"JM\", \"name\": \"Jamaica\" },\r\n    { \"id\": \"JP\", \"name\": \"Japan\" },\r\n    { \"id\": \"JO\", \"name\": \"Jordan\" },\r\n    { \"id\": \"KZ\", \"name\": \"Kazakhstan\" },\r\n    { \"id\": \"KE\", \"name\": \"Kenya\" },\r\n    { \"id\": \"KI\", \"name\": \"Kiribati\" },\r\n    { \"id\": \"KW\", \"name\": \"Kuwait\" },\r\n    { \"id\": \"KG\", \"name\": \"Kyrgyzstan\" },\r\n    { \"id\": \"LA\", \"name\": \"Laos\" },\r\n    { \"id\": \"LV\", \"name\": \"Latvia\" },\r\n    { \"id\": \"LB\", \"name\": \"Lebanon\" },\r\n    { \"id\": \"LS\", \"name\": \"Lesotho\" },\r\n    { \"id\": \"LR\", \"name\": \"Liberia\" },\r\n    { \"id\": \"LY\", \"name\": \"Libya\" },\r\n    { \"id\": \"LI\", \"name\": \"Liechtenstein\" },\r\n    { \"id\": \"LT\", \"name\": \"Lithuania\" },\r\n    { \"id\": \"LU\", \"name\": \"Luxembourg\" },\r\n    { \"id\": \"MK\", \"name\": \"Macedonia\" },\r\n    { \"id\": \"MG\", \"name\": \"Madagascar\" },\r\n    { \"id\": \"MW\", \"name\": \"Malawi\" },\r\n    { \"id\": \"MY\", \"name\": \"Malaysia\" },\r\n    { \"id\": \"MV\", \"name\": \"Maldives\" },\r\n    { \"id\": \"ML\", \"name\": \"Mali\" },\r\n    { \"id\": \"MT\", \"name\": \"Malta\" },\r\n    { \"id\": \"MH\", \"name\": \"Marshall Islands\" },\r\n    { \"id\": \"MR\", \"name\": \"Mauritania\" },\r\n    { \"id\": \"MU\", \"name\": \"Mauritius\" },\r\n    { \"id\": \"MX\", \"name\": \"Mexico\" },\r\n    { \"id\": \"FM\", \"name\": \"Micronesia\" },\r\n    { \"id\": \"MD\", \"name\": \"Moldova\" },\r\n    { \"id\": \"MC\", \"name\": \"Monaco\" },\r\n    { \"id\": \"MN\", \"name\": \"Mongolia\" },\r\n    { \"id\": \"ME\", \"name\": \"Montenegro\" },\r\n    { \"id\": \"MA\", \"name\": \"Morocco\" },\r\n    { \"id\": \"MZ\", \"name\": \"Mozambique\" },\r\n    { \"id\": \"MM\", \"name\": \"Myanmar\" },\r\n    { \"id\": \"NA\", \"name\": \"Namibia\" },\r\n    { \"id\": \"NR\", \"name\": \"Nauru\" },\r\n    { \"id\": \"NP\", \"name\": \"Nepal\" },\r\n    { \"id\": \"NL\", \"name\": \"Netherlands\" },\r\n    { \"id\": \"NZ\", \"name\": \"New Zealand\" },\r\n    { \"id\": \"NI\", \"name\": \"Nicaragua\" },\r\n    { \"id\": \"NE\", \"name\": \"Niger\" },\r\n    { \"id\": \"NG\", \"name\": \"Nigeria\" },\r\n    { \"id\": \"KP\", \"name\": \"North Korea\" },\r\n    { \"id\": \"NO\", \"name\": \"Norway\" },\r\n    { \"id\": \"OM\", \"name\": \"Oman\" },\r\n    { \"id\": \"PK\", \"name\": \"Pakistan\" },\r\n    { \"id\": \"PW\", \"name\": \"Palau\" },\r\n    { \"id\": \"PS\", \"name\": \"Palestinian Territories\" },\r\n    { \"id\": \"PA\", \"name\": \"Panama\" },\r\n    { \"id\": \"PG\", \"name\": \"Papua New Guinea\" },\r\n    { \"id\": \"PY\", \"name\": \"Paraguay\" },\r\n    { \"id\": \"PE\", \"name\": \"Peru\" },\r\n    { \"id\": \"PH\", \"name\": \"Philippines\" },\r\n    { \"id\": \"PL\", \"name\": \"Poland\" },\r\n    { \"id\": \"PT\", \"name\": \"Portugal\" },\r\n    { \"id\": \"QA\", \"name\": \"Qatar\" },\r\n    { \"id\": \"RO\", \"name\": \"Romania\" },\r\n    { \"id\": \"RU\", \"name\": \"Russia\" },\r\n    { \"id\": \"RW\", \"name\": \"Rwanda\" },\r\n    { \"id\": \"KN\", \"name\": \"Saint Kitts and Nevis\" },\r\n    { \"id\": \"LC\", \"name\": \"Saint Lucia\" },\r\n    { \"id\": \"VC\", \"name\": \"Saint Vincent and the Grenadines\" },\r\n    { \"id\": \"WS\", \"name\": \"Samoa\" },\r\n    { \"id\": \"SM\", \"name\": \"San Marino\" },\r\n    { \"id\": \"ST\", \"name\": \"Sao Tome and Principe\" },\r\n    { \"id\": \"SA\", \"name\": \"Saudi Arabia\" },\r\n    { \"id\": \"SN\", \"name\": \"Senegal\" },\r\n    { \"id\": \"RS\", \"name\": \"Serbia\" },\r\n    { \"id\": \"SC\", \"name\": \"Seychelles\" },\r\n    { \"id\": \"SL\", \"name\": \"Sierra Leone\" },\r\n    { \"id\": \"SG\", \"name\": \"Singapore\" },\r\n    { \"id\": \"SK\", \"name\": \"Slovakia\" },\r\n    { \"id\": \"SI\", \"name\": \"Slovenia\" },\r\n    { \"id\": \"SB\", \"name\": \"Solomon Islands\" },\r\n    { \"id\": \"SO\", \"name\": \"Somalia\" },\r\n    { \"id\": \"ZA\", \"name\": \"South Africa\" },\r\n    { \"id\": \"KR\", \"name\": \"South Korea\" },\r\n    { \"id\": \"SS\", \"name\": \"South Sudan\" },\r\n    { \"id\": \"ES\", \"name\": \"Spain\" },\r\n    { \"id\": \"LK\", \"name\": \"Sri Lanka\" },\r\n    { \"id\": \"SD\", \"name\": \"Sudan\" },\r\n    { \"id\": \"SR\", \"name\": \"Suriname\" },\r\n    { \"id\": \"SZ\", \"name\": \"Swaziland\" },\r\n    { \"id\": \"SE\", \"name\": \"Sweden\" },\r\n    { \"id\": \"CH\", \"name\": \"Switzerland\" },\r\n    { \"id\": \"SY\", \"name\": \"Syria\" },\r\n    { \"id\": \"TW\", \"name\": \"Taiwan\" },\r\n    { \"id\": \"TJ\", \"name\": \"Tajikistan\" },\r\n    { \"id\": \"TZ\", \"name\": \"Tanzania\" },\r\n    { \"id\": \"TH\", \"name\": \"Thailand\" },\r\n    { \"id\": \"TL\", \"name\": \"Timor-Leste\" },\r\n    { \"id\": \"TG\", \"name\": \"Togo\" },\r\n    { \"id\": \"TO\", \"name\": \"Tonga\" },\r\n    { \"id\": \"TT\", \"name\": \"Trinidad and Tobago\" },\r\n    { \"id\": \"TN\", \"name\": \"Tunisia\" },\r\n    { \"id\": \"TR\", \"name\": \"Turkey\" },\r\n    { \"id\": \"TM\", \"name\": \"Turkmenistan\" },\r\n    { \"id\": \"TV\", \"name\": \"Tuvalu\" },\r\n    { \"id\": \"UG\", \"name\": \"Uganda\" },\r\n    { \"id\": \"UA\", \"name\": \"Ukraine\" },\r\n    { \"id\": \"AE\", \"name\": \"United Arab Emirates\" },\r\n    { \"id\": \"GB\", \"name\": \"United Kingdom\" },\r\n    { \"id\": \"US\", \"name\": \"United States of America\" },\r\n    { \"id\": \"UY\", \"name\": \"Uruguay\" },\r\n    { \"id\": \"UZ\", \"name\": \"Uzbekistan\" },\r\n    { \"id\": \"VU\", \"name\": \"Vanuatu\" },\r\n    { \"id\": \"VA\", \"name\": \"Vatican City\" },\r\n    { \"id\": \"VE\", \"name\": \"Venezuela\" },\r\n    { \"id\": \"VN\", \"name\": \"Vietnam\" },\r\n    { \"id\": \"YE\", \"name\": \"Yemen\" },\r\n    { \"id\": \"ZM\", \"name\": \"Zambia\" },\r\n    { \"id\": \"ZW\", \"name\": \"Zimbabwe\" }\r\n];\r\n\r\ninterface Country {\r\n    id: string;\r\n    name: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 202
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 203
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "DatePickerComboBoxElement",
            "id": "interface-DatePickerComboBoxElement-8308bb358b01b033e36814cd884e5e285aa9c6dd130b186330c42f1c134eecb28c80cb172b3d710a0c02dd3312eeefe2885537cfcc61062ce7f1a588807496ab",
            "file": "projects/ncs-vaadin-components/src/lib/date-picker/date-picker.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    AfterViewInit,\r\n    Component,\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport '@vaadin/date-picker/vaadin-date-picker';\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-date-picker',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <vaadin-date-picker #vaadinDatePicker></vaadin-date-picker>\r\n    `,\r\n    styles: ``,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class DatePickerComponent implements AfterViewInit {\r\n\r\n    @ViewChild('vaadinDatePicker') vaadinDatePicker!: ElementRef<DatePickerComboBoxElement>;\r\n\r\n    @Input() value: string | undefined;\r\n\r\n    @Input() label: string | undefined;\r\n    @Input() placeholder: string | undefined;\r\n    @Input() helperText: string | undefined;\r\n    @Input() errorMessage: string | undefined;\r\n    @Input() min: string | undefined\r\n    @Input() max: string | undefined;\r\n    @Input() theme: string | undefined;\r\n    @Input() disabled: boolean | undefined;\r\n    @Input() readonly: boolean | undefined;\r\n\r\n    @Output() onChange = new EventEmitter<any>();\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        if (this.label) {\r\n            this.vaadinDatePicker.nativeElement.label = this.label;\r\n        }\r\n        this.vaadinDatePicker.nativeElement.setAttribute('theme', this.theme as DatePickerComboBoxElement['theme']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('value', this.value as DatePickerComboBoxElement['value']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('errorMessage', this.errorMessage as DatePickerComboBoxElement['errorMessage']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('placeholder', this.placeholder as DatePickerComboBoxElement['placeholder']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('helper-text', this.helperText as DatePickerComboBoxElement['helperText']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('min', this.min as DatePickerComboBoxElement['min']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('max', this.max as DatePickerComboBoxElement['max']);\r\n        this.vaadinDatePicker.nativeElement.disabled = !!this.disabled;\r\n        this.vaadinDatePicker.nativeElement.readonly = !!this.readonly;\r\n\r\n        this.vaadinDatePicker.nativeElement.addEventListener('change', (event: any) => {\r\n            this.onChange.emit(event.target[\"__data\"].value)\r\n        });\r\n    }\r\n\r\n    setI18n() {\r\n    }\r\n\r\n    setDateFormat() {\r\n\r\n    }\r\n\r\n\r\n    // private valueChanged(event: any) {\r\n    //     this.onChange.emit(event.target[\"__data\"].value)\r\n    // }\r\n\r\n}\r\n\r\ninterface DatePickerComboBoxElement extends HTMLElement {\r\n\r\n    value: string,\r\n    label: string,\r\n    placeholder: string,\r\n    helperText: string,\r\n    errorMessage: string,\r\n    min: string,\r\n    max: string,\r\n    theme: string,\r\n    disabled: boolean,\r\n    readonly: boolean\r\n}\r\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "helperText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "HTMLElement"
            ]
        },
        {
            "name": "VaadinBadgeElement",
            "id": "interface-VaadinBadgeElement-dab98744c777488d66d9982d83a511eeb867a88198780f498813db2d67e4fcec8ded98e8298278f5dda7958d3187ff6eaa1f15b75bdc6a432374beb4321879ea",
            "file": "projects/ncs-vaadin-components/src/lib/badge/badge.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {AfterViewInit, Component, CUSTOM_ELEMENTS_SCHEMA, ElementRef, Input, OnDestroy, ViewChild} from '@angular/core';\r\nimport '@vaadin/vaadin-lumo-styles/badge-global.js';\r\n\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-badge',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <span #vaadinBadge></span>\r\n    `,\r\n    styles: ``,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class BadgeComponent implements AfterViewInit, OnDestroy {\r\n\r\n    @ViewChild('vaadinBadge') vaadinBadge!: ElementRef<VaadinBadgeElement>;\r\n\r\n    /**\r\n     * Badge theme.\r\n     */\r\n    @Input() theme: string | undefined;\r\n\r\n    @Input() label: string | undefined;\r\n\r\n    ngAfterViewInit(): void {\r\n        this.vaadinBadge.nativeElement.setAttribute('theme', this.theme as VaadinBadgeElement['theme']);\r\n        if (this.label) {\r\n            this.vaadinBadge.nativeElement.innerText = this.label;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n}\r\n\r\ninterface VaadinBadgeElement extends HTMLElement {\r\n    /**\r\n     * The theme variants to apply to the component.\r\n     */\r\n    theme: string;\r\n\r\n    label: string;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>The theme variants to apply to the component.</p>\n",
                    "line": 41,
                    "rawdescription": "\n\nThe theme variants to apply to the component.\n"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "HTMLElement"
            ]
        },
        {
            "name": "VaadinButtonElement",
            "id": "interface-VaadinButtonElement-a040e5a71de9523e5c9acdb44cb59f2f75d9e8a327ad308a5cda5fabbd1568a0a1724c6f86be550b9953095013866ab4c782e857b7d67547fcdfcf1c6be1f26c",
            "file": "projects/ncs-vaadin-components/src/lib/button/button.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    AfterViewInit,\r\n    Component,\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input, OnDestroy,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport '@vaadin/button';\r\n\r\n/**\r\n * Button component.\r\n */\r\n@Component({\r\n    selector: 'ncs-vaadin-button',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <vaadin-button #vaadinButton></vaadin-button>\r\n    `,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ButtonComponent implements AfterViewInit, OnDestroy {\r\n    /**\r\n     * Reference to the Vaadin button element.\r\n     */\r\n    @ViewChild('vaadinButton') vaadinButton!: ElementRef<VaadinButtonElement>;\r\n\r\n    /**\r\n     * Button label.\r\n     */\r\n    @Input() label: string | undefined;\r\n\r\n    /**\r\n     * Button theme.\r\n     */\r\n    @Input() theme: string | undefined;\r\n\r\n    /**\r\n     * Whether the button is disabled.\r\n     */\r\n    @Input() disabled: boolean | undefined;\r\n\r\n    /**\r\n     * Emitted when the button is clicked.\r\n     */\r\n    @Output() onClick = new EventEmitter<MouseEvent>();\r\n\r\n    /**\r\n     * Initialization hook for the component.\r\n     */\r\n    ngAfterViewInit(): void {\r\n        if (this.label) {\r\n            this.vaadinButton.nativeElement.innerText = this.label;\r\n        }\r\n        this.vaadinButton.nativeElement.setAttribute('theme', this.theme as VaadinButtonElement['theme']);\r\n        this.vaadinButton.nativeElement.disabled = !!this.disabled;\r\n\r\n        this.vaadinButton.nativeElement.addEventListener('click', (event: MouseEvent) => {\r\n            this.vaadinButton.nativeElement.addEventListener('click', this.clickListener);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.vaadinButton.nativeElement.removeEventListener('click', this.clickListener);\r\n    }\r\n\r\n    private clickListener = (event: MouseEvent) => {\r\n        this.onClick.emit(event);\r\n    };\r\n}\r\n\r\n/**\r\n * Extended properties of the Vaadin button element.\r\n */\r\ninterface VaadinButtonElement extends HTMLElement {\r\n    /**\r\n     * If true, the user cannot interact with this element.\r\n     */\r\n    label: string;\r\n    /**\r\n     * The theme variants to apply to the component.\r\n     */\r\n    theme: string;\r\n    /**\r\n     * If true, the user cannot interact with this element.\r\n     */\r\n    disabled: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "<p>If true, the user cannot interact with this element.</p>\n",
                    "line": 96,
                    "rawdescription": "\n\nIf true, the user cannot interact with this element.\n"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>If true, the user cannot interact with this element.</p>\n",
                    "line": 88,
                    "rawdescription": "\n\nIf true, the user cannot interact with this element.\n"
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "<p>The theme variants to apply to the component.</p>\n",
                    "line": 92,
                    "rawdescription": "\n\nThe theme variants to apply to the component.\n"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Extended properties of the Vaadin button element.</p>\n",
            "rawdescription": "\n\nExtended properties of the Vaadin button element.\n",
            "methods": [],
            "extends": [
                "HTMLElement"
            ]
        },
        {
            "name": "VaadinCheckboxElement",
            "id": "interface-VaadinCheckboxElement-dd79a2382657c0e5a6f856fd9c7c4ec915ee2912f8480115dddcf383eeded7a7b4218963722ea338aca8caee9733988a297f8be5febd958670b9d1116fb6ebbf",
            "file": "projects/ncs-vaadin-components/src/lib/checkbox/checkbox.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    ViewChild,\r\n    AfterViewInit,\r\n    Output,\r\n    EventEmitter,\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n} from '@angular/core';\r\nimport '@vaadin/checkbox';\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-checkbox',\r\n    standalone: true,\r\n    template: `\r\n        <vaadin-checkbox #vaadinCheckbox></vaadin-checkbox>\r\n    `,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class CheckboxComponent implements AfterViewInit {\r\n    @ViewChild('vaadinCheckbox') vaadinCheckbox!: ElementRef<VaadinCheckboxElement>;\r\n\r\n    @Input() label: string | undefined;\r\n    @Input() value: string | undefined;\r\n    @Input() checked: boolean = false;\r\n    @Input() disabled: boolean = false;\r\n\r\n\r\n    //@Output() valueChanged = new EventEmitter<boolean>();\r\n    @Output() change = new EventEmitter<boolean>();\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        this.initC();\r\n        this.initL();\r\n    }\r\n\r\n    private initC(): void {\r\n        this.vaadinCheckbox.nativeElement.label = this.label as VaadinCheckboxElement['label'];\r\n        this.vaadinCheckbox.nativeElement.value = this.value as VaadinCheckboxElement['value'];\r\n        this.vaadinCheckbox.nativeElement.checked = this.checked;\r\n        this.vaadinCheckbox.nativeElement.disabled = this.disabled;\r\n    }\r\n\r\n    private initL(): void {\r\n        // this.vaadinCheckbox.nativeElement.addEventListener('value-changed', (event: any) => {\r\n        //     this.valueChanged.emit(event);\r\n        // });\r\n        this.vaadinCheckbox.nativeElement.addEventListener('change', (event: any) => {\r\n            event.stopPropagation();\r\n            this.change.emit(event);\r\n        });\r\n    }\r\n}\r\n\r\ninterface VaadinCheckboxElement extends HTMLElement {\r\n    label: string;\r\n    value: string;\r\n    checked: boolean;\r\n    disabled: boolean;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "HTMLElement"
            ]
        },
        {
            "name": "VaadinCheckboxGroupElement",
            "id": "interface-VaadinCheckboxGroupElement-9cfc0a6dbed846a024290c8f7f030a924426f4034fe8e62162301dae9b10f55514e360fb571d829e175095e7156f194fb030077f2bc6f1351eacb6f503452ae5",
            "file": "projects/ncs-vaadin-components/src/lib/checkbox-group/checkbox-group.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n    Component,\r\n    ContentChildren,\r\n    QueryList,\r\n    Output,\r\n    EventEmitter,\r\n    AfterViewInit, ViewChild, ElementRef, Input, CUSTOM_ELEMENTS_SCHEMA\r\n} from '@angular/core';\r\nimport '@vaadin/checkbox-group';\r\nimport {CheckboxComponent} from \"../checkbox/checkbox.component\";\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-checkbox-group',\r\n    standalone: true,\r\n    imports: [CheckboxComponent],\r\n    template: `\r\n        <vaadin-checkbox-group #vaadinCheckboxGroup [attr.theme]=\"theme\" [attr.label]=\"label\">\r\n            <ng-content></ng-content>\r\n        </vaadin-checkbox-group>\r\n    `,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class CheckboxGroupComponent implements AfterViewInit {\r\n    @ViewChild('vaadinCheckboxGroup') vaadinCheckboxGroup!: ElementRef<VaadinCheckboxGroupElement>;\r\n    @ContentChildren(CheckboxComponent) checkboxes!: QueryList<CheckboxComponent>;\r\n\r\n    @Input() label: string | undefined;\r\n    @Input() theme: string | undefined;\r\n\r\n    @Input() checked: boolean = false;\r\n    @Input() disabled: boolean = false;\r\n\r\n    //@Output() valueChanged = new EventEmitter<any>();\r\n    @Output() change = new EventEmitter<any>();\r\n\r\n    ngAfterViewInit(): void {\r\n        this.initC();\r\n        this.initL();\r\n    }\r\n\r\n\r\n    private initC(): void {\r\n        // if (this.label) {\r\n        //     this.vaadinCheckboxGroup.nativeElement.label = this.label;\r\n        // }\r\n        // this.vaadinCheckboxGroup.nativeElement.setAttribute('theme', this.theme as VaadinCheckboxGroupElement['theme']);\r\n        // this.vaadinCheckboxGroup.nativeElement.setAttribute('label', this.label as VaadinCheckboxGroupElement['label']);\r\n        // this.vaadinCheckboxGroup.nativeElement.disabled = this.disabled;\r\n    }\r\n\r\n    private initL(): void {\r\n        this.vaadinCheckboxGroup.nativeElement.addEventListener('change', (event: any) => {\r\n            this.change.emit(event);\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\ninterface VaadinCheckboxGroupElement extends HTMLElement {\r\n    label: string;\r\n\r\n    value: string[];\r\n    theme: string;\r\n    checked: boolean;\r\n    disabled: boolean;\r\n}\r\n\r\n",
            "properties": [
                {
                    "name": "checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "HTMLElement"
            ]
        },
        {
            "name": "VaadinIconElement",
            "id": "interface-VaadinIconElement-15486457855cd0af5faf155675f9d164970a6c450120a928227a2b885ffa28ffb24871eaf0efad31a15e3552f93e549edb5ca10bddb47469105e3857452b6ac5",
            "file": "projects/ncs-vaadin-components/src/lib/icon/icon.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {AfterViewInit, Component, CUSTOM_ELEMENTS_SCHEMA, ElementRef, Input, ViewChild} from '@angular/core';\r\n\r\n// import '@vaadin/icons/vaadin-icons.js';\r\n// import '@vaadin/icons/vaadin-iconset.js';\r\n//\r\nimport '@vaadin/vaadin-lumo-styles/icons.js';\r\n// import '@vaadin/vaadin-lumo-styles/font-icons.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing';\r\n// import '@vaadin/vaadin-material-styles/font-icons.js';\r\n// import '@vaadin/vaadin-lumo-styles/node_modules/@vaadin/icon/vaadin-icon';\r\n// import '@vaadin/vaadin-lumo-styles/node_modules/@vaadin/icon/vaadin-iconset';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-icons',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <vaadin-icon #vaadinIcon></vaadin-icon>\r\n    `,\r\n    styles: ``,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class IconComponent implements AfterViewInit {\r\n\r\n    @ViewChild('vaadinIcon') vaadinIcon!: ElementRef<VaadinIconElement>;\r\n\r\n    @Input() icon: string | undefined;\r\n    @Input() role: string | undefined;\r\n    @Input() ariaLabel: string | undefined;\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        this.vaadinIcon.nativeElement.setAttribute('icon', this.icon as VaadinIconElement['icon']);\r\n        this.vaadinIcon.nativeElement.setAttribute('role', this.role as VaadinIconElement['role']);\r\n        this.vaadinIcon.nativeElement.setAttribute('aria-label', this.ariaLabel as VaadinIconElement['ariaLabel']);\r\n    }\r\n}\r\n\r\ninterface VaadinIconElement extends HTMLElement {\r\n\r\n    icon: string;\r\n    role: string;\r\n    ariaLabel: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "role",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "HTMLElement"
            ]
        },
        {
            "name": "VaadinPasswordFieldElement",
            "id": "interface-VaadinPasswordFieldElement-a21c6b394ff5e0cffb0fafd85400b36eb8f96245d9b32885b878ca52029e18b55fea0609f44c526ac089b47dfe462cdb4b69f6566f1fea1273110c74879737f7",
            "file": "projects/ncs-vaadin-components/src/lib/password-field/password-field.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {AfterViewInit, Component, CUSTOM_ELEMENTS_SCHEMA, ElementRef, Input, ViewChild} from '@angular/core';\r\nimport '@vaadin/password-field/vaadin-password-field';\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-password-field',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <vaadin-password-field #vaadinPasswordField></vaadin-password-field>\r\n    `,\r\n    styles: ``,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class PasswordFieldComponent implements AfterViewInit {\r\n\r\n    @ViewChild('vaadinPasswordField') vaadinPasswordField!: ElementRef<VaadinPasswordFieldElement>;\r\n\r\n    @Input() label: string | undefined;\r\n    @Input() value: string | undefined;\r\n    @Input() placeholder: string | undefined;\r\n    @Input() minLength: string | undefined;\r\n    @Input() maxLength: string | undefined;\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        this.vaadinPasswordField.nativeElement.setAttribute('label', this.label as VaadinPasswordFieldElement['label']);\r\n        this.vaadinPasswordField.nativeElement.setAttribute('value', this.value as VaadinPasswordFieldElement['value']);\r\n        this.vaadinPasswordField.nativeElement.setAttribute('placeholder', this.placeholder as VaadinPasswordFieldElement['placeholder']);\r\n        this.vaadinPasswordField.nativeElement.setAttribute('min-length', this.minLength as VaadinPasswordFieldElement['minLength']);\r\n        this.vaadinPasswordField.nativeElement.setAttribute('max-length', this.maxLength as VaadinPasswordFieldElement['maxLength']);\r\n    }\r\n}\r\n\r\ninterface VaadinPasswordFieldElement extends HTMLElement {\r\n\r\n    label: string;\r\n    value: string;\r\n    placeholder: string;\r\n    minLength: string;\r\n    maxLength: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "maxLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "minLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [
                "HTMLElement"
            ]
        }
    ],
    "injectables": [
        {
            "name": "NcsVaadinComponentsService",
            "id": "injectable-NcsVaadinComponentsService-08285ea6b8789971da7c9d4b10c829a4ca6fffeee7929a38648f3753431573be3e83933e0a68b6c8fedc6e58113abec486f4f5194fcccb671e67ced353ed371d",
            "file": "projects/ncs-vaadin-components/src/lib/ncs-vaadin-components.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NcsVaadinComponentsService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-dab98744c777488d66d9982d83a511eeb867a88198780f498813db2d67e4fcec8ded98e8298278f5dda7958d3187ff6eaa1f15b75bdc6a432374beb4321879ea",
            "file": "projects/ncs-vaadin-components/src/lib/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ncs-vaadin-badge",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<span #vaadinBadge></span>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nBadge theme.\n",
                    "description": "<p>Badge theme.</p>\n",
                    "line": 22,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "vaadinBadge",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<VaadinBadgeElement>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'vaadinBadge'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, Component, CUSTOM_ELEMENTS_SCHEMA, ElementRef, Input, OnDestroy, ViewChild} from '@angular/core';\r\nimport '@vaadin/vaadin-lumo-styles/badge-global.js';\r\n\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-badge',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <span #vaadinBadge></span>\r\n    `,\r\n    styles: ``,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class BadgeComponent implements AfterViewInit, OnDestroy {\r\n\r\n    @ViewChild('vaadinBadge') vaadinBadge!: ElementRef<VaadinBadgeElement>;\r\n\r\n    /**\r\n     * Badge theme.\r\n     */\r\n    @Input() theme: string | undefined;\r\n\r\n    @Input() label: string | undefined;\r\n\r\n    ngAfterViewInit(): void {\r\n        this.vaadinBadge.nativeElement.setAttribute('theme', this.theme as VaadinBadgeElement['theme']);\r\n        if (this.label) {\r\n            this.vaadinBadge.nativeElement.innerText = this.label;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n}\r\n\r\ninterface VaadinBadgeElement extends HTMLElement {\r\n    /**\r\n     * The theme variants to apply to the component.\r\n     */\r\n    theme: string;\r\n\r\n    label: string;\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ]
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-a040e5a71de9523e5c9acdb44cb59f2f75d9e8a327ad308a5cda5fabbd1568a0a1724c6f86be550b9953095013866ab4c782e857b7d67547fcdfcf1c6be1f26c",
            "file": "projects/ncs-vaadin-components/src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ncs-vaadin-button",
            "styleUrls": [],
            "styles": [],
            "template": "<vaadin-button #vaadinButton></vaadin-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhether the button is disabled.\n",
                    "description": "<p>Whether the button is disabled.</p>\n",
                    "line": 50,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nButton label.\n",
                    "description": "<p>Button label.</p>\n",
                    "line": 40,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nButton theme.\n",
                    "description": "<p>Button theme.</p>\n",
                    "line": 45,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nEmitted when the button is clicked.\n",
                    "description": "<p>Emitted when the button is clicked.</p>\n",
                    "line": 55,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "clickListener",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "vaadinButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<VaadinButtonElement>",
                    "optional": false,
                    "description": "<p>Reference to the Vaadin button element.</p>\n",
                    "line": 35,
                    "rawdescription": "\n\nReference to the Vaadin button element.\n",
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'vaadinButton'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInitialization hook for the component.\n",
                    "description": "<p>Initialization hook for the component.</p>\n"
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "<p>Button component.</p>\n",
            "rawdescription": "\n\nButton component.\n",
            "type": "component",
            "sourceCode": "import {\r\n    AfterViewInit,\r\n    Component,\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input, OnDestroy,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport '@vaadin/button';\r\n\r\n/**\r\n * Button component.\r\n */\r\n@Component({\r\n    selector: 'ncs-vaadin-button',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <vaadin-button #vaadinButton></vaadin-button>\r\n    `,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ButtonComponent implements AfterViewInit, OnDestroy {\r\n    /**\r\n     * Reference to the Vaadin button element.\r\n     */\r\n    @ViewChild('vaadinButton') vaadinButton!: ElementRef<VaadinButtonElement>;\r\n\r\n    /**\r\n     * Button label.\r\n     */\r\n    @Input() label: string | undefined;\r\n\r\n    /**\r\n     * Button theme.\r\n     */\r\n    @Input() theme: string | undefined;\r\n\r\n    /**\r\n     * Whether the button is disabled.\r\n     */\r\n    @Input() disabled: boolean | undefined;\r\n\r\n    /**\r\n     * Emitted when the button is clicked.\r\n     */\r\n    @Output() onClick = new EventEmitter<MouseEvent>();\r\n\r\n    /**\r\n     * Initialization hook for the component.\r\n     */\r\n    ngAfterViewInit(): void {\r\n        if (this.label) {\r\n            this.vaadinButton.nativeElement.innerText = this.label;\r\n        }\r\n        this.vaadinButton.nativeElement.setAttribute('theme', this.theme as VaadinButtonElement['theme']);\r\n        this.vaadinButton.nativeElement.disabled = !!this.disabled;\r\n\r\n        this.vaadinButton.nativeElement.addEventListener('click', (event: MouseEvent) => {\r\n            this.vaadinButton.nativeElement.addEventListener('click', this.clickListener);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.vaadinButton.nativeElement.removeEventListener('click', this.clickListener);\r\n    }\r\n\r\n    private clickListener = (event: MouseEvent) => {\r\n        this.onClick.emit(event);\r\n    };\r\n}\r\n\r\n/**\r\n * Extended properties of the Vaadin button element.\r\n */\r\ninterface VaadinButtonElement extends HTMLElement {\r\n    /**\r\n     * If true, the user cannot interact with this element.\r\n     */\r\n    label: string;\r\n    /**\r\n     * The theme variants to apply to the component.\r\n     */\r\n    theme: string;\r\n    /**\r\n     * If true, the user cannot interact with this element.\r\n     */\r\n    disabled: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnDestroy"
            ]
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-dd79a2382657c0e5a6f856fd9c7c4ec915ee2912f8480115dddcf383eeded7a7b4218963722ea338aca8caee9733988a297f8be5febd958670b9d1116fb6ebbf",
            "file": "projects/ncs-vaadin-components/src/lib/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ncs-vaadin-checkbox",
            "styleUrls": [],
            "styles": [],
            "template": "<vaadin-checkbox #vaadinCheckbox></vaadin-checkbox>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "vaadinCheckbox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<VaadinCheckboxElement>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'vaadinCheckbox'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initC",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initL",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    ViewChild,\r\n    AfterViewInit,\r\n    Output,\r\n    EventEmitter,\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n} from '@angular/core';\r\nimport '@vaadin/checkbox';\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-checkbox',\r\n    standalone: true,\r\n    template: `\r\n        <vaadin-checkbox #vaadinCheckbox></vaadin-checkbox>\r\n    `,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class CheckboxComponent implements AfterViewInit {\r\n    @ViewChild('vaadinCheckbox') vaadinCheckbox!: ElementRef<VaadinCheckboxElement>;\r\n\r\n    @Input() label: string | undefined;\r\n    @Input() value: string | undefined;\r\n    @Input() checked: boolean = false;\r\n    @Input() disabled: boolean = false;\r\n\r\n\r\n    //@Output() valueChanged = new EventEmitter<boolean>();\r\n    @Output() change = new EventEmitter<boolean>();\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        this.initC();\r\n        this.initL();\r\n    }\r\n\r\n    private initC(): void {\r\n        this.vaadinCheckbox.nativeElement.label = this.label as VaadinCheckboxElement['label'];\r\n        this.vaadinCheckbox.nativeElement.value = this.value as VaadinCheckboxElement['value'];\r\n        this.vaadinCheckbox.nativeElement.checked = this.checked;\r\n        this.vaadinCheckbox.nativeElement.disabled = this.disabled;\r\n    }\r\n\r\n    private initL(): void {\r\n        // this.vaadinCheckbox.nativeElement.addEventListener('value-changed', (event: any) => {\r\n        //     this.valueChanged.emit(event);\r\n        // });\r\n        this.vaadinCheckbox.nativeElement.addEventListener('change', (event: any) => {\r\n            event.stopPropagation();\r\n            this.change.emit(event);\r\n        });\r\n    }\r\n}\r\n\r\ninterface VaadinCheckboxElement extends HTMLElement {\r\n    label: string;\r\n    value: string;\r\n    checked: boolean;\r\n    disabled: boolean;\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "CheckboxGroupComponent",
            "id": "component-CheckboxGroupComponent-9cfc0a6dbed846a024290c8f7f030a924426f4034fe8e62162301dae9b10f55514e360fb571d829e175095e7156f194fb030077f2bc6f1351eacb6f503452ae5",
            "file": "projects/ncs-vaadin-components/src/lib/checkbox-group/checkbox-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ncs-vaadin-checkbox-group",
            "styleUrls": [],
            "styles": [],
            "template": "<vaadin-checkbox-group #vaadinCheckboxGroup [attr.theme]=\"theme\" [attr.label]=\"label\">\n    <ng-content></ng-content>\n</vaadin-checkbox-group>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "checkboxes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<CheckboxComponent>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "CheckboxComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "vaadinCheckboxGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<VaadinCheckboxGroupElement>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'vaadinCheckboxGroup'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initC",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "initL",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CheckboxComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    Component,\r\n    ContentChildren,\r\n    QueryList,\r\n    Output,\r\n    EventEmitter,\r\n    AfterViewInit, ViewChild, ElementRef, Input, CUSTOM_ELEMENTS_SCHEMA\r\n} from '@angular/core';\r\nimport '@vaadin/checkbox-group';\r\nimport {CheckboxComponent} from \"../checkbox/checkbox.component\";\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-checkbox-group',\r\n    standalone: true,\r\n    imports: [CheckboxComponent],\r\n    template: `\r\n        <vaadin-checkbox-group #vaadinCheckboxGroup [attr.theme]=\"theme\" [attr.label]=\"label\">\r\n            <ng-content></ng-content>\r\n        </vaadin-checkbox-group>\r\n    `,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class CheckboxGroupComponent implements AfterViewInit {\r\n    @ViewChild('vaadinCheckboxGroup') vaadinCheckboxGroup!: ElementRef<VaadinCheckboxGroupElement>;\r\n    @ContentChildren(CheckboxComponent) checkboxes!: QueryList<CheckboxComponent>;\r\n\r\n    @Input() label: string | undefined;\r\n    @Input() theme: string | undefined;\r\n\r\n    @Input() checked: boolean = false;\r\n    @Input() disabled: boolean = false;\r\n\r\n    //@Output() valueChanged = new EventEmitter<any>();\r\n    @Output() change = new EventEmitter<any>();\r\n\r\n    ngAfterViewInit(): void {\r\n        this.initC();\r\n        this.initL();\r\n    }\r\n\r\n\r\n    private initC(): void {\r\n        // if (this.label) {\r\n        //     this.vaadinCheckboxGroup.nativeElement.label = this.label;\r\n        // }\r\n        // this.vaadinCheckboxGroup.nativeElement.setAttribute('theme', this.theme as VaadinCheckboxGroupElement['theme']);\r\n        // this.vaadinCheckboxGroup.nativeElement.setAttribute('label', this.label as VaadinCheckboxGroupElement['label']);\r\n        // this.vaadinCheckboxGroup.nativeElement.disabled = this.disabled;\r\n    }\r\n\r\n    private initL(): void {\r\n        this.vaadinCheckboxGroup.nativeElement.addEventListener('change', (event: any) => {\r\n            this.change.emit(event);\r\n        });\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\ninterface VaadinCheckboxGroupElement extends HTMLElement {\r\n    label: string;\r\n\r\n    value: string[];\r\n    theme: string;\r\n    checked: boolean;\r\n    disabled: boolean;\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "ComboBoxComponent",
            "id": "component-ComboBoxComponent-310435609ab70146d18afb0a777d255017955e67d9acb256c1fc0ac389cb7f0f49dd64af763c88c444ee5d8dd86febfe8b679072123e35eab22a7d27a04e976d",
            "file": "projects/ncs-vaadin-components/src/lib/combo-box/combo-box.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ncs-vaadin-combo-box",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<vaadin-combo-box #vaadinComboBox></vaadin-combo-box>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autoOpenDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "customFilterMethod",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "displayNameRender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "filteredItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "helperText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "itemLabelPath",
                    "defaultValue": "'displayName'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "itemValuePath",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "render",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedItemChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "EventEmitter"
                },
                {
                    "name": "textInput",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "renderers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "vaadinComboBox",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<ComboBoxComponentElement>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'vaadinComboBox'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "createRenderer",
                    "args": [
                        {
                            "name": "template",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 168,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "template",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "defaultFilterMethod",
                    "args": [
                        {
                            "name": "items",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filterValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "items",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filterValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "filterItems",
                    "args": [
                        {
                            "name": "filterValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 178,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "filterValue",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    AfterViewInit,\r\n    Component,\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport '@vaadin/combo-box';\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-combo-box',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <vaadin-combo-box #vaadinComboBox></vaadin-combo-box>\r\n    `,\r\n    styles: ``,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ComboBoxComponent implements AfterViewInit {\r\n\r\n    @ViewChild('vaadinComboBox') vaadinComboBox!: ElementRef<ComboBoxComponentElement>;\r\n\r\n    @Input() style: string | undefined;\r\n    @Input() label: string | undefined;\r\n    @Input() value: string | undefined;\r\n    @Input() placeholder: string | undefined = '';\r\n    @Input() theme: string | undefined;\r\n    @Input() helperText: string | undefined;\r\n\r\n    @Input() itemValuePath: string | undefined;\r\n\r\n    @Input() disabled: boolean | undefined;\r\n    @Input() readonly: boolean | undefined;\r\n    @Input() items: any[] = [];\r\n    // @Input() displayNameFields: string | string[] | undefined;\r\n    @Input() displayNameRender: string | undefined;\r\n\r\n    // @Input() renderer?: (root: HTMLElement, owner: ComboBoxComponentElement, model: { item: any }) => void;\r\n    @Input() render: string | undefined;\r\n\r\n    @Input() filteredItems: any[] = [];\r\n\r\n    @Input() itemLabelPath: string | undefined = 'displayName';\r\n\r\n    private renderers?: (root: HTMLElement, owner: ComboBoxComponentElement, model: { item: any }) => void;\r\n\r\n    // @Output() filterChange = new EventEmitter<string>();\r\n    @Output() valueChange = new EventEmitter<any>();\r\n    @Output() selectedItemChange = new EventEmitter<any>();\r\n    @Output() textInput = new EventEmitter<string>();\r\n\r\n    @Input() customFilterMethod?: (items: any[], filterValue: string) => any[];\r\n\r\n    @Input() autoOpenDisabled: boolean = false;\r\n\r\n\r\n    ngAfterViewInit() {\r\n\r\n\r\n        if (this.style) {\r\n            // Applique le style d'entrée à l'élément vaadin-combo-box\r\n            this.vaadinComboBox.nativeElement.setAttribute('style', this.style);\r\n        }\r\n        this.vaadinComboBox.nativeElement.setAttribute('label', this.label as ComboBoxComponentElement['label']);\r\n        this.vaadinComboBox.nativeElement.setAttribute('value', this.value as ComboBoxComponentElement['value']);\r\n\r\n        this.vaadinComboBox.nativeElement.setAttribute('placeholder', this.placeholder as ComboBoxComponentElement['placeholder']);\r\n        this.vaadinComboBox.nativeElement.setAttribute('theme', this.theme as ComboBoxComponentElement['theme']);\r\n        this.vaadinComboBox.nativeElement.setAttribute('helper-text', this.helperText as ComboBoxComponentElement['helperText']);\r\n        this.vaadinComboBox.nativeElement.setAttribute('item-label-path', this.itemLabelPath as ComboBoxComponentElement['itemLabelPath']);\r\n        this.vaadinComboBox.nativeElement.setAttribute('item-value-path', this.itemValuePath as ComboBoxComponentElement['itemValuePath']);\r\n        // Vérifiez si l'élément natif supporte directement la propriété 'autoOpenDisabled'\r\n        if (this.vaadinComboBox.nativeElement.autoOpenDisabled !== undefined) {\r\n            this.vaadinComboBox.nativeElement.autoOpenDisabled = this.autoOpenDisabled;\r\n        } else {\r\n            // Si 'autoOpenDisabled' n'est pas supporté en tant que propriété, utilisez setAttribute pour les éléments qui traitent les attributs\r\n            // Définir ou retirer l'attribut 'auto-open-disabled' selon la valeur de 'autoOpenDisabled'\r\n            if (this.autoOpenDisabled) {\r\n                this.vaadinComboBox.nativeElement.setAttribute('auto-open-disabled', '');\r\n            } else {\r\n                this.vaadinComboBox.nativeElement.removeAttribute('auto-open-disabled');\r\n            }\r\n        }\r\n\r\n        if (this.itemLabelPath == \"displayName\") {\r\n            this.items = this.items?.map((item) => {\r\n                // if (typeof this.displayNameFields === 'string') {\r\n                //     displayName = item[this.displayNameFields];\r\n                // } else if (Array.isArray(this.displayNameFields)) {\r\n                //     displayName = this.displayNameFields.map(field => item[field]).join('      -       '); // modifier pour avoir un syteme de rendu\r\n                // }\r\n\r\n                if (!this.displayNameRender) {\r\n                    const firstKey = Object.keys(item)[0]; // Obtient le premier champ de l'objet item\r\n                    this.displayNameRender = `{{${firstKey}}}`; // Définit displayNameRender au premier champ\r\n                }\r\n\r\n                let displayName = this.displayNameRender.replace(/{{(\\w+)}}/g, (match: string, field: any) => {\r\n                    return item[field] || '';\r\n                });\r\n\r\n                return {\r\n                    ...item,\r\n                    displayName,\r\n                };\r\n            });\r\n        }\r\n\r\n\r\n        this.vaadinComboBox.nativeElement.items = this.items as ComboBoxComponentElement['items'];\r\n        this.vaadinComboBox.nativeElement.filteredItems = this.items as ComboBoxComponentElement['filteredItems'];\r\n\r\n\r\n        //comboBox.items = [{'label': 'Hydrogen', 'value': 'H'}];\r\n        // comboBox.renderer = (root: HTMLElement, owner: ComboBoxComponentElement, model: { item: any }) => {\r\n        //     //if (!root.firstChild) {\r\n        //     root.innerHTML = '';\r\n        //     root.innerHTML = `<div style=\"display: flex; align-items: center; justify-content: space-between;\">\r\n        //                 <span>${model.item.name}</span>\r\n        //                 <span style=\"color: lightslategrey\">${model.item.id}</span>\r\n        //               </div>`;\r\n        //\r\n        // }\r\n\r\n        if (this.render) {\r\n            this.renderers = this.createRenderer(this.render);\r\n            const comboBox: ComboBoxComponentElement = this.vaadinComboBox.nativeElement\r\n            comboBox.renderer = this.renderers;\r\n            comboBox.requestContentUpdate();\r\n        }\r\n\r\n        this.vaadinComboBox.nativeElement.disabled = !!this.disabled;\r\n        this.vaadinComboBox.nativeElement.readonly = !!this.readonly;\r\n\r\n        // this.vaadinComboBox.nativeElement.addEventListener('filter-changed', ((event: CustomEvent) => {\r\n        //     const filterValue = (event as any).detail.value;\r\n        //     this.filterChange.emit(filterValue);\r\n        // }) as EventListener);\r\n\r\n        this.vaadinComboBox.nativeElement.addEventListener('value-changed', (event: Event) => {\r\n            const detail = (event as CustomEvent).detail;\r\n            if (detail && 'value' in detail) {\r\n                const selectedValue = detail.value;\r\n                this.valueChange.emit(selectedValue);\r\n            }\r\n        });\r\n\r\n        this.vaadinComboBox.nativeElement.addEventListener('input', (event: Event) => {\r\n            const filterValue = (event.target as HTMLInputElement).value;\r\n            this.filterItems(filterValue);\r\n            this.textInput.emit(filterValue); // Émet la valeur saisie si nécessaire\r\n        });\r\n\r\n\r\n        this.vaadinComboBox.nativeElement.addEventListener('selected-item-changed', (($event: CustomEvent) => {\r\n            const selectedItem = $event.detail.value;\r\n            if (selectedItem) {\r\n                this.selectedItemChange.emit(selectedItem);\r\n            }\r\n        }) as EventListener);\r\n    }\r\n\r\n\r\n    private createRenderer(template: string): (root: HTMLElement, owner: any, model: { item: any }) => void {\r\n        return (root, owner, model) => {\r\n            // Expression régulière pour détecter les champs dans le template\r\n            root.innerHTML = template.replace(/{{(\\w+)}}/g, (match: string, field :any) => {\r\n                // Remplace chaque champ trouvé par sa valeur correspondante dans model.item\r\n                return model.item[field] || '';\r\n            });\r\n        };\r\n    }\r\n\r\n    private filterItems(filterValue: string) {\r\n        const filterMethod = this.customFilterMethod || this.defaultFilterMethod;\r\n        this.filteredItems = filterMethod(this.items, filterValue);\r\n        this.vaadinComboBox.nativeElement.filteredItems = this.filteredItems;\r\n    }\r\n\r\n    private defaultFilterMethod(items: any[], filterValue: string): any[] {\r\n        return items.filter(item => item.displayName.toLowerCase().includes(filterValue.toLowerCase()));\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\ninterface ComboBoxComponentElement extends HTMLElement {\r\n\r\n    label: string;\r\n    value: string;\r\n    placeholder: string;\r\n    theme: string;\r\n    helperText: string;\r\n    itemLabelPath: string;\r\n    itemValuePath: string;\r\n    disabled: boolean;\r\n    readonly: boolean;\r\n    items: any[];\r\n    renderer: (root: HTMLElement, comboBox: ComboBoxComponentElement, model: { item: any }) => void;\r\n    renderTemplate: string;\r\n    renderFields: string[];\r\n    renderStyles: string;\r\n    filteredItems: any[];\r\n    autoOpenDisabled: boolean\r\n\r\n\r\n    requestContentUpdate(): void;\r\n}\r\n\r\n\r\n/*\r\n*\r\n* :host([theme~=\"custom-spacing\"]) {\r\n  padding: 0;\r\n  min-height: 0;\r\n}\r\n\r\n* */\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "DatePickerComponent",
            "id": "component-DatePickerComponent-8308bb358b01b033e36814cd884e5e285aa9c6dd130b186330c42f1c134eecb28c80cb172b3d710a0c02dd3312eeefe2885537cfcc61062ce7f1a588807496ab",
            "file": "projects/ncs-vaadin-components/src/lib/date-picker/date-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ncs-vaadin-date-picker",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<vaadin-date-picker #vaadinDatePicker></vaadin-date-picker>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "helperText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean | undefined",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "vaadinDatePicker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<DatePickerComboBoxElement>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'vaadinDatePicker'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDateFormat",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setI18n",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n    AfterViewInit,\r\n    Component,\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport '@vaadin/date-picker/vaadin-date-picker';\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-date-picker',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <vaadin-date-picker #vaadinDatePicker></vaadin-date-picker>\r\n    `,\r\n    styles: ``,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class DatePickerComponent implements AfterViewInit {\r\n\r\n    @ViewChild('vaadinDatePicker') vaadinDatePicker!: ElementRef<DatePickerComboBoxElement>;\r\n\r\n    @Input() value: string | undefined;\r\n\r\n    @Input() label: string | undefined;\r\n    @Input() placeholder: string | undefined;\r\n    @Input() helperText: string | undefined;\r\n    @Input() errorMessage: string | undefined;\r\n    @Input() min: string | undefined\r\n    @Input() max: string | undefined;\r\n    @Input() theme: string | undefined;\r\n    @Input() disabled: boolean | undefined;\r\n    @Input() readonly: boolean | undefined;\r\n\r\n    @Output() onChange = new EventEmitter<any>();\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        if (this.label) {\r\n            this.vaadinDatePicker.nativeElement.label = this.label;\r\n        }\r\n        this.vaadinDatePicker.nativeElement.setAttribute('theme', this.theme as DatePickerComboBoxElement['theme']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('value', this.value as DatePickerComboBoxElement['value']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('errorMessage', this.errorMessage as DatePickerComboBoxElement['errorMessage']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('placeholder', this.placeholder as DatePickerComboBoxElement['placeholder']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('helper-text', this.helperText as DatePickerComboBoxElement['helperText']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('min', this.min as DatePickerComboBoxElement['min']);\r\n        this.vaadinDatePicker.nativeElement.setAttribute('max', this.max as DatePickerComboBoxElement['max']);\r\n        this.vaadinDatePicker.nativeElement.disabled = !!this.disabled;\r\n        this.vaadinDatePicker.nativeElement.readonly = !!this.readonly;\r\n\r\n        this.vaadinDatePicker.nativeElement.addEventListener('change', (event: any) => {\r\n            this.onChange.emit(event.target[\"__data\"].value)\r\n        });\r\n    }\r\n\r\n    setI18n() {\r\n    }\r\n\r\n    setDateFormat() {\r\n\r\n    }\r\n\r\n\r\n    // private valueChanged(event: any) {\r\n    //     this.onChange.emit(event.target[\"__data\"].value)\r\n    // }\r\n\r\n}\r\n\r\ninterface DatePickerComboBoxElement extends HTMLElement {\r\n\r\n    value: string,\r\n    label: string,\r\n    placeholder: string,\r\n    helperText: string,\r\n    errorMessage: string,\r\n    min: string,\r\n    max: string,\r\n    theme: string,\r\n    disabled: boolean,\r\n    readonly: boolean\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-15486457855cd0af5faf155675f9d164970a6c450120a928227a2b885ffa28ffb24871eaf0efad31a15e3552f93e549edb5ca10bddb47469105e3857452b6ac5",
            "file": "projects/ncs-vaadin-components/src/lib/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ncs-vaadin-icons",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<vaadin-icon #vaadinIcon></vaadin-icon>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "role",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "vaadinIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<VaadinIconElement>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'vaadinIcon'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, Component, CUSTOM_ELEMENTS_SCHEMA, ElementRef, Input, ViewChild} from '@angular/core';\r\n\r\n// import '@vaadin/icons/vaadin-icons.js';\r\n// import '@vaadin/icons/vaadin-iconset.js';\r\n//\r\nimport '@vaadin/vaadin-lumo-styles/icons.js';\r\n// import '@vaadin/vaadin-lumo-styles/font-icons.js';\r\nimport '@vaadin/vaadin-lumo-styles/sizing';\r\n// import '@vaadin/vaadin-material-styles/font-icons.js';\r\n// import '@vaadin/vaadin-lumo-styles/node_modules/@vaadin/icon/vaadin-icon';\r\n// import '@vaadin/vaadin-lumo-styles/node_modules/@vaadin/icon/vaadin-iconset';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-icons',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <vaadin-icon #vaadinIcon></vaadin-icon>\r\n    `,\r\n    styles: ``,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class IconComponent implements AfterViewInit {\r\n\r\n    @ViewChild('vaadinIcon') vaadinIcon!: ElementRef<VaadinIconElement>;\r\n\r\n    @Input() icon: string | undefined;\r\n    @Input() role: string | undefined;\r\n    @Input() ariaLabel: string | undefined;\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        this.vaadinIcon.nativeElement.setAttribute('icon', this.icon as VaadinIconElement['icon']);\r\n        this.vaadinIcon.nativeElement.setAttribute('role', this.role as VaadinIconElement['role']);\r\n        this.vaadinIcon.nativeElement.setAttribute('aria-label', this.ariaLabel as VaadinIconElement['ariaLabel']);\r\n    }\r\n}\r\n\r\ninterface VaadinIconElement extends HTMLElement {\r\n\r\n    icon: string;\r\n    role: string;\r\n    ariaLabel: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ]
        },
        {
            "name": "NcsVaadinComponentsComponent",
            "id": "component-NcsVaadinComponentsComponent-113d737d544a4799a94a467c74a59abd41855ed43faa05fbeb462375c533f21c363d3993e5c172359d0db29b5b584e50b1837a2b15d2944bdb47ae782beefef8",
            "file": "projects/ncs-vaadin-components/src/lib/ncs-vaadin-components.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ncs-ncs-vaadin-components",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<p>\n  ncs-vaadin-components works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ncs-ncs-vaadin-components',\r\n  standalone: true,\r\n  imports: [],\r\n  template: `\r\n    <p>\r\n      ncs-vaadin-components works!\r\n    </p>\r\n  `,\r\n  styles: ``\r\n})\r\nexport class NcsVaadinComponentsComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": []
        },
        {
            "name": "PasswordFieldComponent",
            "id": "component-PasswordFieldComponent-a21c6b394ff5e0cffb0fafd85400b36eb8f96245d9b32885b878ca52029e18b55fea0609f44c526ac089b47dfe462cdb4b69f6566f1fea1273110c74879737f7",
            "file": "projects/ncs-vaadin-components/src/lib/password-field/password-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ncs-vaadin-password-field",
            "styleUrls": [],
            "styles": [
                ""
            ],
            "template": "<vaadin-password-field #vaadinPasswordField></vaadin-password-field>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "maxLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "minLength",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string | undefined",
                    "decorators": []
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string | undefined",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "vaadinPasswordField",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<VaadinPasswordFieldElement>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'vaadinPasswordField'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, Component, CUSTOM_ELEMENTS_SCHEMA, ElementRef, Input, ViewChild} from '@angular/core';\r\nimport '@vaadin/password-field/vaadin-password-field';\r\n\r\n@Component({\r\n    selector: 'ncs-vaadin-password-field',\r\n    standalone: true,\r\n    imports: [],\r\n    template: `\r\n        <vaadin-password-field #vaadinPasswordField></vaadin-password-field>\r\n    `,\r\n    styles: ``,\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class PasswordFieldComponent implements AfterViewInit {\r\n\r\n    @ViewChild('vaadinPasswordField') vaadinPasswordField!: ElementRef<VaadinPasswordFieldElement>;\r\n\r\n    @Input() label: string | undefined;\r\n    @Input() value: string | undefined;\r\n    @Input() placeholder: string | undefined;\r\n    @Input() minLength: string | undefined;\r\n    @Input() maxLength: string | undefined;\r\n\r\n\r\n    ngAfterViewInit(): void {\r\n        this.vaadinPasswordField.nativeElement.setAttribute('label', this.label as VaadinPasswordFieldElement['label']);\r\n        this.vaadinPasswordField.nativeElement.setAttribute('value', this.value as VaadinPasswordFieldElement['value']);\r\n        this.vaadinPasswordField.nativeElement.setAttribute('placeholder', this.placeholder as VaadinPasswordFieldElement['placeholder']);\r\n        this.vaadinPasswordField.nativeElement.setAttribute('min-length', this.minLength as VaadinPasswordFieldElement['minLength']);\r\n        this.vaadinPasswordField.nativeElement.setAttribute('max-length', this.maxLength as VaadinPasswordFieldElement['maxLength']);\r\n    }\r\n}\r\n\r\ninterface VaadinPasswordFieldElement extends HTMLElement {\r\n\r\n    label: string;\r\n    value: string;\r\n    placeholder: string;\r\n    minLength: string;\r\n    maxLength: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n",
            "extends": [],
            "implements": [
                "AfterViewInit"
            ]
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "CheckboxGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj",
                "defaultValue": "{\n    render: (args) => ({\n        props: args,\n        template: `\n            <ncs-checkbox-group [label]=\"label\" [theme]=\"theme\" (valueChanged)=\"onChange($event)\">\n                <ncs-checkbox label=\"Option 1\" value=\"1\"></ncs-checkbox>\n                <ncs-checkbox label=\"Option 2\" value=\"2\" checked></ncs-checkbox>\n                <ncs-checkbox label=\"Option 3\" value=\"3\"></ncs-checkbox>\n                <ncs-checkbox label=\"Option 4\" value=\"4\"></ncs-checkbox>\n            </ncs-checkbox-group>\n        `,\n    }),\n    args: {\n        label: 'Group Label',\n        theme: 'vertical',\n        onChange: action('change event triggered')\n    },\n}"
            },
            {
                "name": "Clock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        icon: 'lumo:clock',\n        role: \"img\",\n        ariaLabel: \"Favorite\"\n    },\n}"
            },
            {
                "name": "Confirmed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Confirmed',\n        theme: 'badge success',\n    },\n}"
            },
            {
                "name": "countries",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/_data/countries.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Country[]",
                "defaultValue": "[\r\n    { \"id\": \"AF\", \"name\": \"Afghanistan\" },\r\n    { \"id\": \"AL\", \"name\": \"Albania\" },\r\n    { \"id\": \"DZ\", \"name\": \"Algeria\" },\r\n    { \"id\": \"AD\", \"name\": \"Andorra\" },\r\n    { \"id\": \"AO\", \"name\": \"Angola\" },\r\n    { \"id\": \"AG\", \"name\": \"Antigua and Barbuda\" },\r\n    { \"id\": \"AR\", \"name\": \"Argentina\" },\r\n    { \"id\": \"AM\", \"name\": \"Armenia\" },\r\n    { \"id\": \"AU\", \"name\": \"Australia\" },\r\n    { \"id\": \"AT\", \"name\": \"Austria\" },\r\n    { \"id\": \"AZ\", \"name\": \"Azerbaijan\" },\r\n    { \"id\": \"BS\", \"name\": \"Bahamas\" },\r\n    { \"id\": \"BH\", \"name\": \"Bahrain\" },\r\n    { \"id\": \"BD\", \"name\": \"Bangladesh\" },\r\n    { \"id\": \"BB\", \"name\": \"Barbados\" },\r\n    { \"id\": \"BY\", \"name\": \"Belarus\" },\r\n    { \"id\": \"BE\", \"name\": \"Belgium\" },\r\n    { \"id\": \"BZ\", \"name\": \"Belize\" },\r\n    { \"id\": \"BJ\", \"name\": \"Benin\" },\r\n    { \"id\": \"BT\", \"name\": \"Bhutan\" },\r\n    { \"id\": \"BO\", \"name\": \"Bolivia\" },\r\n    { \"id\": \"BA\", \"name\": \"Bosnia and Herzegovina\" },\r\n    { \"id\": \"BW\", \"name\": \"Botswana\" },\r\n    { \"id\": \"BR\", \"name\": \"Brazil\" },\r\n    { \"id\": \"BN\", \"name\": \"Brunei\" },\r\n    { \"id\": \"BG\", \"name\": \"Bulgaria\" },\r\n    { \"id\": \"BF\", \"name\": \"Burkina Faso\" },\r\n    { \"id\": \"BI\", \"name\": \"Burundi\" },\r\n    { \"id\": \"KH\", \"name\": \"Cambodia\" },\r\n    { \"id\": \"CM\", \"name\": \"Cameroon\" },\r\n    { \"id\": \"CA\", \"name\": \"Canada\" },\r\n    { \"id\": \"CV\", \"name\": \"Cape Verde\" },\r\n    { \"id\": \"CF\", \"name\": \"Central African Republic\" },\r\n    { \"id\": \"TD\", \"name\": \"Chad\" },\r\n    { \"id\": \"CL\", \"name\": \"Chile\" },\r\n    { \"id\": \"CN\", \"name\": \"China\" },\r\n    { \"id\": \"CO\", \"name\": \"Colombia\" },\r\n    { \"id\": \"KM\", \"name\": \"Comoros\" },\r\n    { \"id\": \"CG\", \"name\": \"Congo (Brazzaville)\" },\r\n    { \"id\": \"CD\", \"name\": \"Congo (Kinshasa)\" },\r\n    { \"id\": \"CR\", \"name\": \"Costa Rica\" },\r\n    { \"id\": \"HR\", \"name\": \"Croatia\" },\r\n    { \"id\": \"CU\", \"name\": \"Cuba\" },\r\n    { \"id\": \"CY\", \"name\": \"Cyprus\" },\r\n    { \"id\": \"CZ\", \"name\": \"Czech Republic\" },\r\n    { \"id\": \"DK\", \"name\": \"Denmark\" },\r\n    { \"id\": \"DJ\", \"name\": \"Djibouti\" },\r\n    { \"id\": \"DM\", \"name\": \"Dominica\" },\r\n    { \"id\": \"DO\", \"name\": \"Dominican Republic\" },\r\n    { \"id\": \"EC\", \"name\": \"Ecuador\" },\r\n    { \"id\": \"EG\", \"name\": \"Egypt\" },\r\n    { \"id\": \"SV\", \"name\": \"El Salvador\" },\r\n    { \"id\": \"GQ\", \"name\": \"Equatorial Guinea\" },\r\n    { \"id\": \"ER\", \"name\": \"Eritrea\" },\r\n    { \"id\": \"EE\", \"name\": \"Estonia\" },\r\n    { \"id\": \"ET\", \"name\": \"Ethiopia\" },\r\n    { \"id\": \"FJ\", \"name\": \"Fiji\" },\r\n    { \"id\": \"FI\", \"name\": \"Finland\" },\r\n    { \"id\": \"FR\", \"name\": \"France\" },\r\n    { \"id\": \"GA\", \"name\": \"Gabon\" },\r\n    { \"id\": \"GM\", \"name\": \"Gambia\" },\r\n    { \"id\": \"GE\", \"name\": \"Georgia\" },\r\n    { \"id\": \"DE\", \"name\": \"Germany\" },\r\n    { \"id\": \"GH\", \"name\": \"Ghana\" },\r\n    { \"id\": \"GR\", \"name\": \"Greece\" },\r\n    { \"id\": \"GD\", \"name\": \"Grenada\" },\r\n    { \"id\": \"GT\", \"name\": \"Guatemala\" },\r\n    { \"id\": \"GN\", \"name\": \"Guinea\" },\r\n    { \"id\": \"GW\", \"name\": \"Guinea-Bissau\" },\r\n    { \"id\": \"GY\", \"name\": \"Guyana\" },\r\n    { \"id\": \"HT\", \"name\": \"Haiti\" },\r\n    { \"id\": \"HN\", \"name\": \"Honduras\" },\r\n    { \"id\": \"HU\", \"name\": \"Hungary\" },\r\n    { \"id\": \"IS\", \"name\": \"Iceland\" },\r\n    { \"id\": \"IN\", \"name\": \"India\" },\r\n    { \"id\": \"ID\", \"name\": \"Indonesia\" },\r\n    { \"id\": \"IR\", \"name\": \"Iran\" },\r\n    { \"id\": \"IQ\", \"name\": \"Iraq\" },\r\n    { \"id\": \"IE\", \"name\": \"Ireland\" },\r\n    { \"id\": \"IL\", \"name\": \"Israel\" },\r\n    { \"id\": \"IT\", \"name\": \"Italy\" },\r\n    { \"id\": \"CI\", \"name\": \"Ivory Coast\" },\r\n    { \"id\": \"JM\", \"name\": \"Jamaica\" },\r\n    { \"id\": \"JP\", \"name\": \"Japan\" },\r\n    { \"id\": \"JO\", \"name\": \"Jordan\" },\r\n    { \"id\": \"KZ\", \"name\": \"Kazakhstan\" },\r\n    { \"id\": \"KE\", \"name\": \"Kenya\" },\r\n    { \"id\": \"KI\", \"name\": \"Kiribati\" },\r\n    { \"id\": \"KW\", \"name\": \"Kuwait\" },\r\n    { \"id\": \"KG\", \"name\": \"Kyrgyzstan\" },\r\n    { \"id\": \"LA\", \"name\": \"Laos\" },\r\n    { \"id\": \"LV\", \"name\": \"Latvia\" },\r\n    { \"id\": \"LB\", \"name\": \"Lebanon\" },\r\n    { \"id\": \"LS\", \"name\": \"Lesotho\" },\r\n    { \"id\": \"LR\", \"name\": \"Liberia\" },\r\n    { \"id\": \"LY\", \"name\": \"Libya\" },\r\n    { \"id\": \"LI\", \"name\": \"Liechtenstein\" },\r\n    { \"id\": \"LT\", \"name\": \"Lithuania\" },\r\n    { \"id\": \"LU\", \"name\": \"Luxembourg\" },\r\n    { \"id\": \"MK\", \"name\": \"Macedonia\" },\r\n    { \"id\": \"MG\", \"name\": \"Madagascar\" },\r\n    { \"id\": \"MW\", \"name\": \"Malawi\" },\r\n    { \"id\": \"MY\", \"name\": \"Malaysia\" },\r\n    { \"id\": \"MV\", \"name\": \"Maldives\" },\r\n    { \"id\": \"ML\", \"name\": \"Mali\" },\r\n    { \"id\": \"MT\", \"name\": \"Malta\" },\r\n    { \"id\": \"MH\", \"name\": \"Marshall Islands\" },\r\n    { \"id\": \"MR\", \"name\": \"Mauritania\" },\r\n    { \"id\": \"MU\", \"name\": \"Mauritius\" },\r\n    { \"id\": \"MX\", \"name\": \"Mexico\" },\r\n    { \"id\": \"FM\", \"name\": \"Micronesia\" },\r\n    { \"id\": \"MD\", \"name\": \"Moldova\" },\r\n    { \"id\": \"MC\", \"name\": \"Monaco\" },\r\n    { \"id\": \"MN\", \"name\": \"Mongolia\" },\r\n    { \"id\": \"ME\", \"name\": \"Montenegro\" },\r\n    { \"id\": \"MA\", \"name\": \"Morocco\" },\r\n    { \"id\": \"MZ\", \"name\": \"Mozambique\" },\r\n    { \"id\": \"MM\", \"name\": \"Myanmar\" },\r\n    { \"id\": \"NA\", \"name\": \"Namibia\" },\r\n    { \"id\": \"NR\", \"name\": \"Nauru\" },\r\n    { \"id\": \"NP\", \"name\": \"Nepal\" },\r\n    { \"id\": \"NL\", \"name\": \"Netherlands\" },\r\n    { \"id\": \"NZ\", \"name\": \"New Zealand\" },\r\n    { \"id\": \"NI\", \"name\": \"Nicaragua\" },\r\n    { \"id\": \"NE\", \"name\": \"Niger\" },\r\n    { \"id\": \"NG\", \"name\": \"Nigeria\" },\r\n    { \"id\": \"KP\", \"name\": \"North Korea\" },\r\n    { \"id\": \"NO\", \"name\": \"Norway\" },\r\n    { \"id\": \"OM\", \"name\": \"Oman\" },\r\n    { \"id\": \"PK\", \"name\": \"Pakistan\" },\r\n    { \"id\": \"PW\", \"name\": \"Palau\" },\r\n    { \"id\": \"PS\", \"name\": \"Palestinian Territories\" },\r\n    { \"id\": \"PA\", \"name\": \"Panama\" },\r\n    { \"id\": \"PG\", \"name\": \"Papua New Guinea\" },\r\n    { \"id\": \"PY\", \"name\": \"Paraguay\" },\r\n    { \"id\": \"PE\", \"name\": \"Peru\" },\r\n    { \"id\": \"PH\", \"name\": \"Philippines\" },\r\n    { \"id\": \"PL\", \"name\": \"Poland\" },\r\n    { \"id\": \"PT\", \"name\": \"Portugal\" },\r\n    { \"id\": \"QA\", \"name\": \"Qatar\" },\r\n    { \"id\": \"RO\", \"name\": \"Romania\" },\r\n    { \"id\": \"RU\", \"name\": \"Russia\" },\r\n    { \"id\": \"RW\", \"name\": \"Rwanda\" },\r\n    { \"id\": \"KN\", \"name\": \"Saint Kitts and Nevis\" },\r\n    { \"id\": \"LC\", \"name\": \"Saint Lucia\" },\r\n    { \"id\": \"VC\", \"name\": \"Saint Vincent and the Grenadines\" },\r\n    { \"id\": \"WS\", \"name\": \"Samoa\" },\r\n    { \"id\": \"SM\", \"name\": \"San Marino\" },\r\n    { \"id\": \"ST\", \"name\": \"Sao Tome and Principe\" },\r\n    { \"id\": \"SA\", \"name\": \"Saudi Arabia\" },\r\n    { \"id\": \"SN\", \"name\": \"Senegal\" },\r\n    { \"id\": \"RS\", \"name\": \"Serbia\" },\r\n    { \"id\": \"SC\", \"name\": \"Seychelles\" },\r\n    { \"id\": \"SL\", \"name\": \"Sierra Leone\" },\r\n    { \"id\": \"SG\", \"name\": \"Singapore\" },\r\n    { \"id\": \"SK\", \"name\": \"Slovakia\" },\r\n    { \"id\": \"SI\", \"name\": \"Slovenia\" },\r\n    { \"id\": \"SB\", \"name\": \"Solomon Islands\" },\r\n    { \"id\": \"SO\", \"name\": \"Somalia\" },\r\n    { \"id\": \"ZA\", \"name\": \"South Africa\" },\r\n    { \"id\": \"KR\", \"name\": \"South Korea\" },\r\n    { \"id\": \"SS\", \"name\": \"South Sudan\" },\r\n    { \"id\": \"ES\", \"name\": \"Spain\" },\r\n    { \"id\": \"LK\", \"name\": \"Sri Lanka\" },\r\n    { \"id\": \"SD\", \"name\": \"Sudan\" },\r\n    { \"id\": \"SR\", \"name\": \"Suriname\" },\r\n    { \"id\": \"SZ\", \"name\": \"Swaziland\" },\r\n    { \"id\": \"SE\", \"name\": \"Sweden\" },\r\n    { \"id\": \"CH\", \"name\": \"Switzerland\" },\r\n    { \"id\": \"SY\", \"name\": \"Syria\" },\r\n    { \"id\": \"TW\", \"name\": \"Taiwan\" },\r\n    { \"id\": \"TJ\", \"name\": \"Tajikistan\" },\r\n    { \"id\": \"TZ\", \"name\": \"Tanzania\" },\r\n    { \"id\": \"TH\", \"name\": \"Thailand\" },\r\n    { \"id\": \"TL\", \"name\": \"Timor-Leste\" },\r\n    { \"id\": \"TG\", \"name\": \"Togo\" },\r\n    { \"id\": \"TO\", \"name\": \"Tonga\" },\r\n    { \"id\": \"TT\", \"name\": \"Trinidad and Tobago\" },\r\n    { \"id\": \"TN\", \"name\": \"Tunisia\" },\r\n    { \"id\": \"TR\", \"name\": \"Turkey\" },\r\n    { \"id\": \"TM\", \"name\": \"Turkmenistan\" },\r\n    { \"id\": \"TV\", \"name\": \"Tuvalu\" },\r\n    { \"id\": \"UG\", \"name\": \"Uganda\" },\r\n    { \"id\": \"UA\", \"name\": \"Ukraine\" },\r\n    { \"id\": \"AE\", \"name\": \"United Arab Emirates\" },\r\n    { \"id\": \"GB\", \"name\": \"United Kingdom\" },\r\n    { \"id\": \"US\", \"name\": \"United States of America\" },\r\n    { \"id\": \"UY\", \"name\": \"Uruguay\" },\r\n    { \"id\": \"UZ\", \"name\": \"Uzbekistan\" },\r\n    { \"id\": \"VU\", \"name\": \"Vanuatu\" },\r\n    { \"id\": \"VA\", \"name\": \"Vatican City\" },\r\n    { \"id\": \"VE\", \"name\": \"Venezuela\" },\r\n    { \"id\": \"VN\", \"name\": \"Vietnam\" },\r\n    { \"id\": \"YE\", \"name\": \"Yemen\" },\r\n    { \"id\": \"ZM\", \"name\": \"Zambia\" },\r\n    { \"id\": \"ZW\", \"name\": \"Zimbabwe\" }\r\n]"
            },
            {
                "name": "customFilterByIdAndName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(items: any[], filterValue: string) => {\n    const filterValueLower = filterValue.toLowerCase();\n    return items.filter(({ id, name }) => {\n        const itemString = `${id.toString()} ${name}`.toLowerCase();\n        return itemString.includes(filterValueLower);\n    });\n}"
            },
            {
                "name": "DatePicker",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Date Picker Small',\n        theme: 'small',\n        helperText: 'Select or type a browser - Format: DD/MM/YYYY',\n        value: '2025-01-01'\n    },\n}"
            },
            {
                "name": "DatePickerError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Date Picker Error',\n        helperText: 'Select or type a browser - Format: DD/MM/YYYY',\n        value: '2025-01-01',\n        errorMessage: 'test error message',\n        min: '2024-01-01',\n    },\n}"
            },
            {
                "name": "Denied",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Denied',\n        theme: 'badge error',\n    },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Button Large',\n        theme: 'large',\n    },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BadgeComponent>",
                "defaultValue": "{\n    title: 'Components/Badge',\n    component: BadgeComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        // disabled: {\n        //   control: { type: 'inline-radio', options: [true, null] },\n        // },\n        // disabled: {control: 'boolean'},\n        theme: {\n            control: 'text',\n        },\n        // Pour onClick, vous pouvez simplement afficher une action\n        // onClick: {\n        //     action: 'clicked',\n        // },\n    },\n    // render: (args: BadgeComponent) => ({\n    //     props: {\n    //         ...args,\n    //         onClick: action('Button clicked'),\n    //     },\n    // }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n    title: 'Components/Button',\n    component: ButtonComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        // disabled: {\n        //   control: { type: 'inline-radio', options: [true, null] },\n        // },\n        disabled: {control: 'boolean'},\n        theme: {\n            control: 'text',\n        },\n        // Pour onClick, vous pouvez simplement afficher une action\n        onClick: {\n            action: 'clicked',\n        },\n    },\n    render: (args: ButtonComponent) => ({\n        props: {\n            ...args,\n            onClick: action('Button clicked'),\n        },\n    }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ComboBoxComponent>",
                "defaultValue": "{\n    title: 'Components/ComboBox',\n    component: ComboBoxComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        // disabled: {\n        //   control: { type: 'inline-radio', options: [true, null] },\n        // },\n        disabled: {control: 'boolean'},\n        readonly: {control: 'boolean'},\n        theme: {\n            control: 'text',\n        },\n        // Pour onClick, vous pouvez simplement afficher une action\n        selectedItemChange: {\n            action: 'filterChange',\n        },\n        valueChange: {\n            action: 'valueChange',\n        },\n        textInput: {\n            action: 'textInput',\n        },\n        items: {\n            control: 'objet',\n        },\n    },\n    render: (args: ComboBoxComponent) => ({\n        props: {\n            ...args,\n            valueChange: action('valueChange'),\n            filterChange: action('filterChange'),\n            customFilterMethod: customFilterByIdAndName\n        },\n    }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxComponent>",
                "defaultValue": "{\n    title: 'Components/Checkbox',\n    component: CheckboxComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [CheckboxGroupComponent, CheckboxComponent],\n        }),\n    ],\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        label: {\n            control: 'text',\n            description: 'Label of the checkbox',\n            defaultValue: 'Default Label',\n        },\n        checked: {\n            control: 'boolean',\n            description: 'Checked state of the checkbox',\n            defaultValue: false,\n        },\n        disabled: {\n            control: 'boolean',\n            description: 'Whether the checkbox is disabled',\n            defaultValue: false,\n        }\n    },\n    // render: (args: CheckboxComponent) => ({\n    //     props: {\n    //         ...args,\n    //         onClick: action('Button clicked'),\n    //     },\n    // }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatePickerComponent>",
                "defaultValue": "{\n    title: 'Components/DatePicker',\n    component: DatePickerComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        disabled: {control: 'boolean'},\n        readonly: {control: 'boolean'},\n        theme: {\n            control: 'text',\n        },\n        label: {\n            control: 'text',\n        },\n        value: {\n            control: 'text',\n        },\n        placeholder: {\n            control: 'text',\n        },\n        helperText: {\n            control: 'text',\n        },\n        min: {\n            control: 'text',\n        },\n        max: {\n            control: 'text',\n        },\n        errorMessage: {\n            control: 'text',\n        },\n        // Pour onClick, vous pouvez simplement afficher une action\n        onChange: {\n            action: 'date changed',\n        },\n    },\n     // render: (args: DatePickerComponent) => ({\n     //     props: {\n     //         ...args,\n     //         onClick: action('DatePickerComponent changed'),\n     //     },\n     // }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconComponent>",
                "defaultValue": "{\n    title: 'Components/Icons',\n    component: IconComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        // // disabled: {\n        // //   control: { type: 'inline-radio', options: [true, null] },\n        // // },\n        // disabled: {control: 'boolean'},\n        // theme: {\n        //     control: 'text',\n        // },\n        icon: {\n            control: 'text',\n        }\n        // // Pour onClick, vous pouvez simplement afficher une action\n        // onClick: {\n        //     action: 'clicked',\n        // },\n    },\n    // render: (args: DatePickerComponent) => ({\n    //     props: {\n    //         ...args,\n    //         onClick: action('Button clicked'),\n    //     },\n    // }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/password-field/password-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PasswordFieldComponent>",
                "defaultValue": "{\n    title: 'Components/PasswordField',\n    component: PasswordFieldComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        label: {\n            control: 'text',\n        },\n        value: {\n            control: 'text',\n        },\n        placeholder: {\n            control: 'text',\n        },\n        minLength: {\n            control: 'text',\n        },\n        maxLength: {\n            control: 'text',\n        },\n    },\n     // render: (args: DatePickerComponent) => ({\n     //     props: {\n     //         ...args,\n     //         onClick: action('DatePickerComponent changed'),\n     //     },\n     // }),\n}"
            },
            {
                "name": "Normal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Button Normal',\n        theme: 'normal',\n    },\n}"
            },
            {
                "name": "OnHold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'On hold',\n        theme: 'badge contrast',\n    },\n}"
            },
            {
                "name": "PasswordField",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/password-field/password-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Password',\n        value: 'Ex@mplePassw0rd',\n        minLength: '6',\n        maxLength: '16',\n        placeholder: 'Enter your password',\n    },\n}"
            },
            {
                "name": "Pending",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Pending',\n        theme: 'badge',\n    },\n}"
            },
            {
                "name": "Photo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        icon: 'lumo:photo',\n        role: \"img\",\n        ariaLabel: \"Favorite\"\n    },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n    parameters: {\n        actions: {argTypesRegex: \"^on[A-Z].*\"},\n        controls: {\n            matchers: {\n                color: /(background|color)$/i,\n                date: /Date$/i,\n            },\n        },\n        // docs: {\n        //     theme: themes.light,\n        // },\n    },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'Button Small',\n        theme: 'small',\n    },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ComboBoxComponent>",
                "defaultValue": "{\n    args: {\n        label: 'Browser',\n        // value: 'BE',\n        placeholder: '',\n        helperText: 'Select or type a browser',\n        theme: 'small',\n        items: countries,\n        itemLabelPath: 'displayName',\n        itemValuePath: 'id',\n        // displayNameFields: ['name'], // ['name', 'id']\n        displayNameRender: \"{{name}}  -  {{id}}\",\n        render: `<div style=\"display: flex; align-items: center; justify-content: space-between;\">\n            <span>{{name}}</span>\n            <span style=\"color: lightslategrey\">{{id}}</span>\n         </div>`,\n        style: 'width: 300px;',\n    },\n    parameters: {\n        docs: {\n            source: {\n                type: 'code',\n                code: `\n                        // Votre exemple de code ici\n                        const items = [...]; // Remplacez par la définition réelle de vos items\n\n                <ComboBoxComponent\n                  label=\"Browser\"\n                  helperText=\"Select or type a browser\"\n                  theme=\"small\"\n                  items={items}\n                  itemLabelPath=\"displayName\"\n                  itemValuePath=\"id\"\n                  displayNameFields={['name']}\n                  render={\\`\n                    <div style=\"display: flex; align-items: center; justify-content: space-between;\">\n                      <span>{{name}}</span>\n                      <span style=\"color: lightslategrey\">{{id}}</span>\n                    </div>\\`}\n                  style=\"width: 300px\"\n                />\n                `,\n            },\n        },\n    },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n    args: {\n        label: 'checkbox',\n    },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BadgeComponent>",
                "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ComboBoxComponent>",
                "file": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxComponent>",
                "file": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatePickerComponent>",
                "file": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<IconComponent>",
                "file": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PasswordFieldComponent>",
                "file": "projects/ncs-vaadin-components/src/stories/password-field/password-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts": [
                {
                    "name": "CheckboxGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj",
                    "defaultValue": "{\n    render: (args) => ({\n        props: args,\n        template: `\n            <ncs-checkbox-group [label]=\"label\" [theme]=\"theme\" (valueChanged)=\"onChange($event)\">\n                <ncs-checkbox label=\"Option 1\" value=\"1\"></ncs-checkbox>\n                <ncs-checkbox label=\"Option 2\" value=\"2\" checked></ncs-checkbox>\n                <ncs-checkbox label=\"Option 3\" value=\"3\"></ncs-checkbox>\n                <ncs-checkbox label=\"Option 4\" value=\"4\"></ncs-checkbox>\n            </ncs-checkbox-group>\n        `,\n    }),\n    args: {\n        label: 'Group Label',\n        theme: 'vertical',\n        onChange: action('change event triggered')\n    },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxComponent>",
                    "defaultValue": "{\n    title: 'Components/Checkbox',\n    component: CheckboxComponent,\n    decorators: [\n        moduleMetadata({\n            imports: [CheckboxGroupComponent, CheckboxComponent],\n        }),\n    ],\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        label: {\n            control: 'text',\n            description: 'Label of the checkbox',\n            defaultValue: 'Default Label',\n        },\n        checked: {\n            control: 'boolean',\n            description: 'Checked state of the checkbox',\n            defaultValue: false,\n        },\n        disabled: {\n            control: 'boolean',\n            description: 'Whether the checkbox is disabled',\n            defaultValue: false,\n        }\n    },\n    // render: (args: CheckboxComponent) => ({\n    //     props: {\n    //         ...args,\n    //         onClick: action('Button clicked'),\n    //     },\n    // }),\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'checkbox',\n    },\n}"
                }
            ],
            "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts": [
                {
                    "name": "Clock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        icon: 'lumo:clock',\n        role: \"img\",\n        ariaLabel: \"Favorite\"\n    },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconComponent>",
                    "defaultValue": "{\n    title: 'Components/Icons',\n    component: IconComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        // // disabled: {\n        // //   control: { type: 'inline-radio', options: [true, null] },\n        // // },\n        // disabled: {control: 'boolean'},\n        // theme: {\n        //     control: 'text',\n        // },\n        icon: {\n            control: 'text',\n        }\n        // // Pour onClick, vous pouvez simplement afficher une action\n        // onClick: {\n        //     action: 'clicked',\n        // },\n    },\n    // render: (args: DatePickerComponent) => ({\n    //     props: {\n    //         ...args,\n    //         onClick: action('Button clicked'),\n    //     },\n    // }),\n}"
                },
                {
                    "name": "Photo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        icon: 'lumo:photo',\n        role: \"img\",\n        ariaLabel: \"Favorite\"\n    },\n}"
                }
            ],
            "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts": [
                {
                    "name": "Confirmed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Confirmed',\n        theme: 'badge success',\n    },\n}"
                },
                {
                    "name": "Denied",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Denied',\n        theme: 'badge error',\n    },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BadgeComponent>",
                    "defaultValue": "{\n    title: 'Components/Badge',\n    component: BadgeComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        // disabled: {\n        //   control: { type: 'inline-radio', options: [true, null] },\n        // },\n        // disabled: {control: 'boolean'},\n        theme: {\n            control: 'text',\n        },\n        // Pour onClick, vous pouvez simplement afficher une action\n        // onClick: {\n        //     action: 'clicked',\n        // },\n    },\n    // render: (args: BadgeComponent) => ({\n    //     props: {\n    //         ...args,\n    //         onClick: action('Button clicked'),\n    //     },\n    // }),\n}"
                },
                {
                    "name": "OnHold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'On hold',\n        theme: 'badge contrast',\n    },\n}"
                },
                {
                    "name": "Pending",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Pending',\n        theme: 'badge',\n    },\n}"
                }
            ],
            "projects/ncs-vaadin-components/src/stories/_data/countries.ts": [
                {
                    "name": "countries",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/_data/countries.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Country[]",
                    "defaultValue": "[\r\n    { \"id\": \"AF\", \"name\": \"Afghanistan\" },\r\n    { \"id\": \"AL\", \"name\": \"Albania\" },\r\n    { \"id\": \"DZ\", \"name\": \"Algeria\" },\r\n    { \"id\": \"AD\", \"name\": \"Andorra\" },\r\n    { \"id\": \"AO\", \"name\": \"Angola\" },\r\n    { \"id\": \"AG\", \"name\": \"Antigua and Barbuda\" },\r\n    { \"id\": \"AR\", \"name\": \"Argentina\" },\r\n    { \"id\": \"AM\", \"name\": \"Armenia\" },\r\n    { \"id\": \"AU\", \"name\": \"Australia\" },\r\n    { \"id\": \"AT\", \"name\": \"Austria\" },\r\n    { \"id\": \"AZ\", \"name\": \"Azerbaijan\" },\r\n    { \"id\": \"BS\", \"name\": \"Bahamas\" },\r\n    { \"id\": \"BH\", \"name\": \"Bahrain\" },\r\n    { \"id\": \"BD\", \"name\": \"Bangladesh\" },\r\n    { \"id\": \"BB\", \"name\": \"Barbados\" },\r\n    { \"id\": \"BY\", \"name\": \"Belarus\" },\r\n    { \"id\": \"BE\", \"name\": \"Belgium\" },\r\n    { \"id\": \"BZ\", \"name\": \"Belize\" },\r\n    { \"id\": \"BJ\", \"name\": \"Benin\" },\r\n    { \"id\": \"BT\", \"name\": \"Bhutan\" },\r\n    { \"id\": \"BO\", \"name\": \"Bolivia\" },\r\n    { \"id\": \"BA\", \"name\": \"Bosnia and Herzegovina\" },\r\n    { \"id\": \"BW\", \"name\": \"Botswana\" },\r\n    { \"id\": \"BR\", \"name\": \"Brazil\" },\r\n    { \"id\": \"BN\", \"name\": \"Brunei\" },\r\n    { \"id\": \"BG\", \"name\": \"Bulgaria\" },\r\n    { \"id\": \"BF\", \"name\": \"Burkina Faso\" },\r\n    { \"id\": \"BI\", \"name\": \"Burundi\" },\r\n    { \"id\": \"KH\", \"name\": \"Cambodia\" },\r\n    { \"id\": \"CM\", \"name\": \"Cameroon\" },\r\n    { \"id\": \"CA\", \"name\": \"Canada\" },\r\n    { \"id\": \"CV\", \"name\": \"Cape Verde\" },\r\n    { \"id\": \"CF\", \"name\": \"Central African Republic\" },\r\n    { \"id\": \"TD\", \"name\": \"Chad\" },\r\n    { \"id\": \"CL\", \"name\": \"Chile\" },\r\n    { \"id\": \"CN\", \"name\": \"China\" },\r\n    { \"id\": \"CO\", \"name\": \"Colombia\" },\r\n    { \"id\": \"KM\", \"name\": \"Comoros\" },\r\n    { \"id\": \"CG\", \"name\": \"Congo (Brazzaville)\" },\r\n    { \"id\": \"CD\", \"name\": \"Congo (Kinshasa)\" },\r\n    { \"id\": \"CR\", \"name\": \"Costa Rica\" },\r\n    { \"id\": \"HR\", \"name\": \"Croatia\" },\r\n    { \"id\": \"CU\", \"name\": \"Cuba\" },\r\n    { \"id\": \"CY\", \"name\": \"Cyprus\" },\r\n    { \"id\": \"CZ\", \"name\": \"Czech Republic\" },\r\n    { \"id\": \"DK\", \"name\": \"Denmark\" },\r\n    { \"id\": \"DJ\", \"name\": \"Djibouti\" },\r\n    { \"id\": \"DM\", \"name\": \"Dominica\" },\r\n    { \"id\": \"DO\", \"name\": \"Dominican Republic\" },\r\n    { \"id\": \"EC\", \"name\": \"Ecuador\" },\r\n    { \"id\": \"EG\", \"name\": \"Egypt\" },\r\n    { \"id\": \"SV\", \"name\": \"El Salvador\" },\r\n    { \"id\": \"GQ\", \"name\": \"Equatorial Guinea\" },\r\n    { \"id\": \"ER\", \"name\": \"Eritrea\" },\r\n    { \"id\": \"EE\", \"name\": \"Estonia\" },\r\n    { \"id\": \"ET\", \"name\": \"Ethiopia\" },\r\n    { \"id\": \"FJ\", \"name\": \"Fiji\" },\r\n    { \"id\": \"FI\", \"name\": \"Finland\" },\r\n    { \"id\": \"FR\", \"name\": \"France\" },\r\n    { \"id\": \"GA\", \"name\": \"Gabon\" },\r\n    { \"id\": \"GM\", \"name\": \"Gambia\" },\r\n    { \"id\": \"GE\", \"name\": \"Georgia\" },\r\n    { \"id\": \"DE\", \"name\": \"Germany\" },\r\n    { \"id\": \"GH\", \"name\": \"Ghana\" },\r\n    { \"id\": \"GR\", \"name\": \"Greece\" },\r\n    { \"id\": \"GD\", \"name\": \"Grenada\" },\r\n    { \"id\": \"GT\", \"name\": \"Guatemala\" },\r\n    { \"id\": \"GN\", \"name\": \"Guinea\" },\r\n    { \"id\": \"GW\", \"name\": \"Guinea-Bissau\" },\r\n    { \"id\": \"GY\", \"name\": \"Guyana\" },\r\n    { \"id\": \"HT\", \"name\": \"Haiti\" },\r\n    { \"id\": \"HN\", \"name\": \"Honduras\" },\r\n    { \"id\": \"HU\", \"name\": \"Hungary\" },\r\n    { \"id\": \"IS\", \"name\": \"Iceland\" },\r\n    { \"id\": \"IN\", \"name\": \"India\" },\r\n    { \"id\": \"ID\", \"name\": \"Indonesia\" },\r\n    { \"id\": \"IR\", \"name\": \"Iran\" },\r\n    { \"id\": \"IQ\", \"name\": \"Iraq\" },\r\n    { \"id\": \"IE\", \"name\": \"Ireland\" },\r\n    { \"id\": \"IL\", \"name\": \"Israel\" },\r\n    { \"id\": \"IT\", \"name\": \"Italy\" },\r\n    { \"id\": \"CI\", \"name\": \"Ivory Coast\" },\r\n    { \"id\": \"JM\", \"name\": \"Jamaica\" },\r\n    { \"id\": \"JP\", \"name\": \"Japan\" },\r\n    { \"id\": \"JO\", \"name\": \"Jordan\" },\r\n    { \"id\": \"KZ\", \"name\": \"Kazakhstan\" },\r\n    { \"id\": \"KE\", \"name\": \"Kenya\" },\r\n    { \"id\": \"KI\", \"name\": \"Kiribati\" },\r\n    { \"id\": \"KW\", \"name\": \"Kuwait\" },\r\n    { \"id\": \"KG\", \"name\": \"Kyrgyzstan\" },\r\n    { \"id\": \"LA\", \"name\": \"Laos\" },\r\n    { \"id\": \"LV\", \"name\": \"Latvia\" },\r\n    { \"id\": \"LB\", \"name\": \"Lebanon\" },\r\n    { \"id\": \"LS\", \"name\": \"Lesotho\" },\r\n    { \"id\": \"LR\", \"name\": \"Liberia\" },\r\n    { \"id\": \"LY\", \"name\": \"Libya\" },\r\n    { \"id\": \"LI\", \"name\": \"Liechtenstein\" },\r\n    { \"id\": \"LT\", \"name\": \"Lithuania\" },\r\n    { \"id\": \"LU\", \"name\": \"Luxembourg\" },\r\n    { \"id\": \"MK\", \"name\": \"Macedonia\" },\r\n    { \"id\": \"MG\", \"name\": \"Madagascar\" },\r\n    { \"id\": \"MW\", \"name\": \"Malawi\" },\r\n    { \"id\": \"MY\", \"name\": \"Malaysia\" },\r\n    { \"id\": \"MV\", \"name\": \"Maldives\" },\r\n    { \"id\": \"ML\", \"name\": \"Mali\" },\r\n    { \"id\": \"MT\", \"name\": \"Malta\" },\r\n    { \"id\": \"MH\", \"name\": \"Marshall Islands\" },\r\n    { \"id\": \"MR\", \"name\": \"Mauritania\" },\r\n    { \"id\": \"MU\", \"name\": \"Mauritius\" },\r\n    { \"id\": \"MX\", \"name\": \"Mexico\" },\r\n    { \"id\": \"FM\", \"name\": \"Micronesia\" },\r\n    { \"id\": \"MD\", \"name\": \"Moldova\" },\r\n    { \"id\": \"MC\", \"name\": \"Monaco\" },\r\n    { \"id\": \"MN\", \"name\": \"Mongolia\" },\r\n    { \"id\": \"ME\", \"name\": \"Montenegro\" },\r\n    { \"id\": \"MA\", \"name\": \"Morocco\" },\r\n    { \"id\": \"MZ\", \"name\": \"Mozambique\" },\r\n    { \"id\": \"MM\", \"name\": \"Myanmar\" },\r\n    { \"id\": \"NA\", \"name\": \"Namibia\" },\r\n    { \"id\": \"NR\", \"name\": \"Nauru\" },\r\n    { \"id\": \"NP\", \"name\": \"Nepal\" },\r\n    { \"id\": \"NL\", \"name\": \"Netherlands\" },\r\n    { \"id\": \"NZ\", \"name\": \"New Zealand\" },\r\n    { \"id\": \"NI\", \"name\": \"Nicaragua\" },\r\n    { \"id\": \"NE\", \"name\": \"Niger\" },\r\n    { \"id\": \"NG\", \"name\": \"Nigeria\" },\r\n    { \"id\": \"KP\", \"name\": \"North Korea\" },\r\n    { \"id\": \"NO\", \"name\": \"Norway\" },\r\n    { \"id\": \"OM\", \"name\": \"Oman\" },\r\n    { \"id\": \"PK\", \"name\": \"Pakistan\" },\r\n    { \"id\": \"PW\", \"name\": \"Palau\" },\r\n    { \"id\": \"PS\", \"name\": \"Palestinian Territories\" },\r\n    { \"id\": \"PA\", \"name\": \"Panama\" },\r\n    { \"id\": \"PG\", \"name\": \"Papua New Guinea\" },\r\n    { \"id\": \"PY\", \"name\": \"Paraguay\" },\r\n    { \"id\": \"PE\", \"name\": \"Peru\" },\r\n    { \"id\": \"PH\", \"name\": \"Philippines\" },\r\n    { \"id\": \"PL\", \"name\": \"Poland\" },\r\n    { \"id\": \"PT\", \"name\": \"Portugal\" },\r\n    { \"id\": \"QA\", \"name\": \"Qatar\" },\r\n    { \"id\": \"RO\", \"name\": \"Romania\" },\r\n    { \"id\": \"RU\", \"name\": \"Russia\" },\r\n    { \"id\": \"RW\", \"name\": \"Rwanda\" },\r\n    { \"id\": \"KN\", \"name\": \"Saint Kitts and Nevis\" },\r\n    { \"id\": \"LC\", \"name\": \"Saint Lucia\" },\r\n    { \"id\": \"VC\", \"name\": \"Saint Vincent and the Grenadines\" },\r\n    { \"id\": \"WS\", \"name\": \"Samoa\" },\r\n    { \"id\": \"SM\", \"name\": \"San Marino\" },\r\n    { \"id\": \"ST\", \"name\": \"Sao Tome and Principe\" },\r\n    { \"id\": \"SA\", \"name\": \"Saudi Arabia\" },\r\n    { \"id\": \"SN\", \"name\": \"Senegal\" },\r\n    { \"id\": \"RS\", \"name\": \"Serbia\" },\r\n    { \"id\": \"SC\", \"name\": \"Seychelles\" },\r\n    { \"id\": \"SL\", \"name\": \"Sierra Leone\" },\r\n    { \"id\": \"SG\", \"name\": \"Singapore\" },\r\n    { \"id\": \"SK\", \"name\": \"Slovakia\" },\r\n    { \"id\": \"SI\", \"name\": \"Slovenia\" },\r\n    { \"id\": \"SB\", \"name\": \"Solomon Islands\" },\r\n    { \"id\": \"SO\", \"name\": \"Somalia\" },\r\n    { \"id\": \"ZA\", \"name\": \"South Africa\" },\r\n    { \"id\": \"KR\", \"name\": \"South Korea\" },\r\n    { \"id\": \"SS\", \"name\": \"South Sudan\" },\r\n    { \"id\": \"ES\", \"name\": \"Spain\" },\r\n    { \"id\": \"LK\", \"name\": \"Sri Lanka\" },\r\n    { \"id\": \"SD\", \"name\": \"Sudan\" },\r\n    { \"id\": \"SR\", \"name\": \"Suriname\" },\r\n    { \"id\": \"SZ\", \"name\": \"Swaziland\" },\r\n    { \"id\": \"SE\", \"name\": \"Sweden\" },\r\n    { \"id\": \"CH\", \"name\": \"Switzerland\" },\r\n    { \"id\": \"SY\", \"name\": \"Syria\" },\r\n    { \"id\": \"TW\", \"name\": \"Taiwan\" },\r\n    { \"id\": \"TJ\", \"name\": \"Tajikistan\" },\r\n    { \"id\": \"TZ\", \"name\": \"Tanzania\" },\r\n    { \"id\": \"TH\", \"name\": \"Thailand\" },\r\n    { \"id\": \"TL\", \"name\": \"Timor-Leste\" },\r\n    { \"id\": \"TG\", \"name\": \"Togo\" },\r\n    { \"id\": \"TO\", \"name\": \"Tonga\" },\r\n    { \"id\": \"TT\", \"name\": \"Trinidad and Tobago\" },\r\n    { \"id\": \"TN\", \"name\": \"Tunisia\" },\r\n    { \"id\": \"TR\", \"name\": \"Turkey\" },\r\n    { \"id\": \"TM\", \"name\": \"Turkmenistan\" },\r\n    { \"id\": \"TV\", \"name\": \"Tuvalu\" },\r\n    { \"id\": \"UG\", \"name\": \"Uganda\" },\r\n    { \"id\": \"UA\", \"name\": \"Ukraine\" },\r\n    { \"id\": \"AE\", \"name\": \"United Arab Emirates\" },\r\n    { \"id\": \"GB\", \"name\": \"United Kingdom\" },\r\n    { \"id\": \"US\", \"name\": \"United States of America\" },\r\n    { \"id\": \"UY\", \"name\": \"Uruguay\" },\r\n    { \"id\": \"UZ\", \"name\": \"Uzbekistan\" },\r\n    { \"id\": \"VU\", \"name\": \"Vanuatu\" },\r\n    { \"id\": \"VA\", \"name\": \"Vatican City\" },\r\n    { \"id\": \"VE\", \"name\": \"Venezuela\" },\r\n    { \"id\": \"VN\", \"name\": \"Vietnam\" },\r\n    { \"id\": \"YE\", \"name\": \"Yemen\" },\r\n    { \"id\": \"ZM\", \"name\": \"Zambia\" },\r\n    { \"id\": \"ZW\", \"name\": \"Zimbabwe\" }\r\n]"
                }
            ],
            "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts": [
                {
                    "name": "customFilterByIdAndName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(items: any[], filterValue: string) => {\n    const filterValueLower = filterValue.toLowerCase();\n    return items.filter(({ id, name }) => {\n        const itemString = `${id.toString()} ${name}`.toLowerCase();\n        return itemString.includes(filterValueLower);\n    });\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ComboBoxComponent>",
                    "defaultValue": "{\n    title: 'Components/ComboBox',\n    component: ComboBoxComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        // disabled: {\n        //   control: { type: 'inline-radio', options: [true, null] },\n        // },\n        disabled: {control: 'boolean'},\n        readonly: {control: 'boolean'},\n        theme: {\n            control: 'text',\n        },\n        // Pour onClick, vous pouvez simplement afficher une action\n        selectedItemChange: {\n            action: 'filterChange',\n        },\n        valueChange: {\n            action: 'valueChange',\n        },\n        textInput: {\n            action: 'textInput',\n        },\n        items: {\n            control: 'objet',\n        },\n    },\n    render: (args: ComboBoxComponent) => ({\n        props: {\n            ...args,\n            valueChange: action('valueChange'),\n            filterChange: action('filterChange'),\n            customFilterMethod: customFilterByIdAndName\n        },\n    }),\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ComboBoxComponent>",
                    "defaultValue": "{\n    args: {\n        label: 'Browser',\n        // value: 'BE',\n        placeholder: '',\n        helperText: 'Select or type a browser',\n        theme: 'small',\n        items: countries,\n        itemLabelPath: 'displayName',\n        itemValuePath: 'id',\n        // displayNameFields: ['name'], // ['name', 'id']\n        displayNameRender: \"{{name}}  -  {{id}}\",\n        render: `<div style=\"display: flex; align-items: center; justify-content: space-between;\">\n            <span>{{name}}</span>\n            <span style=\"color: lightslategrey\">{{id}}</span>\n         </div>`,\n        style: 'width: 300px;',\n    },\n    parameters: {\n        docs: {\n            source: {\n                type: 'code',\n                code: `\n                        // Votre exemple de code ici\n                        const items = [...]; // Remplacez par la définition réelle de vos items\n\n                <ComboBoxComponent\n                  label=\"Browser\"\n                  helperText=\"Select or type a browser\"\n                  theme=\"small\"\n                  items={items}\n                  itemLabelPath=\"displayName\"\n                  itemValuePath=\"id\"\n                  displayNameFields={['name']}\n                  render={\\`\n                    <div style=\"display: flex; align-items: center; justify-content: space-between;\">\n                      <span>{{name}}</span>\n                      <span style=\"color: lightslategrey\">{{id}}</span>\n                    </div>\\`}\n                  style=\"width: 300px\"\n                />\n                `,\n            },\n        },\n    },\n}"
                }
            ],
            "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts": [
                {
                    "name": "DatePicker",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Date Picker Small',\n        theme: 'small',\n        helperText: 'Select or type a browser - Format: DD/MM/YYYY',\n        value: '2025-01-01'\n    },\n}"
                },
                {
                    "name": "DatePickerError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Date Picker Error',\n        helperText: 'Select or type a browser - Format: DD/MM/YYYY',\n        value: '2025-01-01',\n        errorMessage: 'test error message',\n        min: '2024-01-01',\n    },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatePickerComponent>",
                    "defaultValue": "{\n    title: 'Components/DatePicker',\n    component: DatePickerComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        disabled: {control: 'boolean'},\n        readonly: {control: 'boolean'},\n        theme: {\n            control: 'text',\n        },\n        label: {\n            control: 'text',\n        },\n        value: {\n            control: 'text',\n        },\n        placeholder: {\n            control: 'text',\n        },\n        helperText: {\n            control: 'text',\n        },\n        min: {\n            control: 'text',\n        },\n        max: {\n            control: 'text',\n        },\n        errorMessage: {\n            control: 'text',\n        },\n        // Pour onClick, vous pouvez simplement afficher une action\n        onChange: {\n            action: 'date changed',\n        },\n    },\n     // render: (args: DatePickerComponent) => ({\n     //     props: {\n     //         ...args,\n     //         onClick: action('DatePickerComponent changed'),\n     //     },\n     // }),\n}"
                }
            ],
            "projects/ncs-vaadin-components/src/stories/button/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Button Large',\n        theme: 'large',\n    },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n    title: 'Components/Button',\n    component: ButtonComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        // disabled: {\n        //   control: { type: 'inline-radio', options: [true, null] },\n        // },\n        disabled: {control: 'boolean'},\n        theme: {\n            control: 'text',\n        },\n        // Pour onClick, vous pouvez simplement afficher une action\n        onClick: {\n            action: 'clicked',\n        },\n    },\n    render: (args: ButtonComponent) => ({\n        props: {\n            ...args,\n            onClick: action('Button clicked'),\n        },\n    }),\n}"
                },
                {
                    "name": "Normal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Button Normal',\n        theme: 'normal',\n    },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Button Small',\n        theme: 'small',\n    },\n}"
                }
            ],
            "projects/ncs-vaadin-components/src/stories/password-field/password-field.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/password-field/password-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PasswordFieldComponent>",
                    "defaultValue": "{\n    title: 'Components/PasswordField',\n    component: PasswordFieldComponent,\n    tags: ['autodocs'],\n    // Ajoutez des contrôles pour les propriétés du composant ici\n    argTypes: {\n        label: {\n            control: 'text',\n        },\n        value: {\n            control: 'text',\n        },\n        placeholder: {\n            control: 'text',\n        },\n        minLength: {\n            control: 'text',\n        },\n        maxLength: {\n            control: 'text',\n        },\n    },\n     // render: (args: DatePickerComponent) => ({\n     //     props: {\n     //         ...args,\n     //         onClick: action('DatePickerComponent changed'),\n     //     },\n     // }),\n}"
                },
                {
                    "name": "PasswordField",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/src/stories/password-field/password-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n    args: {\n        label: 'Password',\n        value: 'Ex@mplePassw0rd',\n        minLength: '6',\n        maxLength: '16',\n        placeholder: 'Enter your password',\n    },\n}"
                }
            ],
            "projects/ncs-vaadin-components/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/ncs-vaadin-components/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n    parameters: {\n        actions: {argTypesRegex: \"^on[A-Z].*\"},\n        controls: {\n            matchers: {\n                color: /(background|color)$/i,\n                date: /Date$/i,\n            },\n        },\n        // docs: {\n        //     theme: themes.light,\n        // },\n    },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BadgeComponent>",
                    "file": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ncs-vaadin-components/src/stories/button/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ComboBoxComponent>",
                    "file": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxComponent>",
                    "file": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatePickerComponent>",
                    "file": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<IconComponent>",
                    "file": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/ncs-vaadin-components/src/stories/password-field/password-field.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PasswordFieldComponent>",
                    "file": "projects/ncs-vaadin-components/src/stories/password-field/password-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 5,
        "status": "low",
        "files": [
            {
                "filePath": "projects/ncs-vaadin-components/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/badge/badge.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VaadinBadgeElement",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 77,
                "coverageCount": "7/9",
                "status": "very-good"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/button/button.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VaadinButtonElement",
                "coveragePercent": 100,
                "coverageCount": "4/4",
                "status": "very-good"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/checkbox-group/checkbox-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/checkbox-group/checkbox-group.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VaadinCheckboxGroupElement",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/checkbox/checkbox.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VaadinCheckboxElement",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/combo-box/combo-box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ComboBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/combo-box/combo-box.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ComboBoxComponentElement",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/date-picker/date-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/date-picker/date-picker.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DatePickerComboBoxElement",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/icon/icon.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VaadinIconElement",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/ncs-vaadin-components.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NcsVaadinComponentsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/ncs-vaadin-components.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NcsVaadinComponentsService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/password-field/password-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PasswordFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/lib/password-field/password-field.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "VaadinPasswordFieldElement",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/_data/countries.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Country",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/_data/countries.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "countries",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Confirmed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Denied",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnHold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/badge/badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pending",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Normal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "customFilterByIdAndName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/combo-box/combo-box.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DatePicker",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DatePickerError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/date-picker/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Clock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/icons/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Photo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/password-field/password-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/ncs-vaadin-components/src/stories/password-field/password-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PasswordField",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}